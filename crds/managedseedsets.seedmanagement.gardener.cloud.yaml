apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: managedseedsets.seedmanagement.gardener.cloud
spec:
  conversion:
    strategy: None
  group: seedmanagement.gardener.cloud
  names:
    kind: ManagedSeedSet
    listKind: ManagedSeedSetList
    plural: managedseedsets
    shortNames:
    - mss
    singular: managedseedset
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ManagedSeedSet represents a set of identical ManagedSeeds.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired identities of ManagedSeeds and Shoots
              in this set.
            properties:
              replicas:
                description: Replicas is the desired number of replicas of the given
                  Template. Defaults to 1.
                format: int32
                type: integer
              revisionHistoryLimit:
                description: RevisionHistoryLimit is the maximum number of revisions
                  that will be maintained in the ManagedSeedSet's revision history.
                  Defaults to 10. This field is immutable.
                format: int32
                type: integer
              selector:
                description: Selector is a label query over ManagedSeeds and Shoots
                  that should match the replica count. It must match the ManagedSeeds
                  and Shoots template's labels. This field is immutable.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              shootTemplate:
                description: ShootTemplate describes the Shoot that will be created
                  if insufficient replicas are detected for hosting the corresponding
                  ManagedSeed. Each Shoot created / updated by the ManagedSeedSet
                  will fulfill this template.
                properties:
                  metadata:
                    description: Standard object metadata.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  spec:
                    description: Specification of the desired behavior of the Shoot.
                    properties:
                      accessRestrictions:
                        description: AccessRestrictions describe a list of access
                          restrictions for this shoot cluster.
                        items:
                          description: AccessRestrictionWithOptions describes an access
                            restriction for a Kubernetes cluster (e.g., EU access-only)
                            and allows to specify additional options.
                          properties:
                            name:
                              description: Name is the name of the restriction.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: Options is a map of additional options
                                for the access restriction.
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      addons:
                        description: Addons contains information about enabled/disabled
                          addons and their configuration.
                        properties:
                          kubernetesDashboard:
                            description: KubernetesDashboard holds configuration settings
                              for the kubernetes dashboard addon.
                            properties:
                              authenticationMode:
                                description: AuthenticationMode defines the authentication
                                  mode for the kubernetes-dashboard.
                                type: string
                              enabled:
                                description: Enabled indicates whether the addon is
                                  enabled or not.
                                type: boolean
                            required:
                            - enabled
                            type: object
                          nginxIngress:
                            description: NginxIngress holds configuration settings
                              for the nginx-ingress addon.
                            properties:
                              config:
                                additionalProperties:
                                  type: string
                                description: Config contains custom configuration
                                  for the nginx-ingress-controller configuration.
                                  See https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md#configuration-options
                                type: object
                              enabled:
                                description: Enabled indicates whether the addon is
                                  enabled or not.
                                type: boolean
                              externalTrafficPolicy:
                                description: |-
                                  ExternalTrafficPolicy controls the `.spec.externalTrafficPolicy` value of the load balancer `Service` exposing the nginx-ingress. Defaults to `Cluster`.

                                  Possible enum values:
                                   - `"Cluster"` routes traffic to all endpoints.
                                   - `"Local"` preserves the source IP of the traffic by routing only to endpoints on the same node as the traffic was received on (dropping the traffic if there are no local endpoints).
                                type: string
                              loadBalancerSourceRanges:
                                description: LoadBalancerSourceRanges is list of allowed
                                  IP sources for NginxIngress
                                items:
                                  type: string
                                type: array
                            required:
                            - enabled
                            type: object
                        type: object
                      cloudProfile:
                        description: CloudProfile contains a reference to a CloudProfile
                          or a NamespacedCloudProfile.
                        properties:
                          kind:
                            description: Kind contains a CloudProfile kind.
                            type: string
                          name:
                            description: Name contains the name of the referenced
                              CloudProfile.
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      cloudProfileName:
                        description: 'CloudProfileName is a name of a CloudProfile
                          object. Deprecated: This field will be removed in a future
                          version of Gardener. Use `CloudProfile` instead. Until removed,
                          this field is synced with the `CloudProfile` field.'
                        type: string
                      controlPlane:
                        description: ControlPlane contains general settings for the
                          control plane of the shoot.
                        properties:
                          highAvailability:
                            description: HighAvailability holds the configuration
                              settings for high availability of the control plane
                              of a shoot.
                            properties:
                              failureTolerance:
                                description: FailureTolerance holds information about
                                  failure tolerance level of a highly available resource.
                                properties:
                                  type:
                                    description: Type specifies the type of failure
                                      that the highly available resource can tolerate
                                    type: string
                                required:
                                - type
                                type: object
                            required:
                            - failureTolerance
                            type: object
                        type: object
                      credentialsBindingName:
                        description: CredentialsBindingName is the name of a CredentialsBinding
                          that has a reference to the provider credentials. The credentials
                          will be used to create the shoot in the respective account.
                          The field is mutually exclusive with SecretBindingName.
                        type: string
                      dns:
                        description: DNS contains information about the DNS settings
                          of the Shoot.
                        properties:
                          domain:
                            description: Domain is the external available domain of
                              the Shoot cluster. This domain will be written into
                              the kubeconfig that is handed out to end-users. This
                              field is immutable.
                            type: string
                          providers:
                            description: |-
                              Providers is a list of DNS providers that shall be enabled for this shoot cluster. Only relevant if not a default domain is used.

                              Deprecated: Configuring multiple DNS providers is deprecated and will be forbidden in a future release. Please use the DNS extension provider config (e.g. shoot-dns-service) for additional providers.
                            items:
                              description: DNSProvider contains information about
                                a DNS provider.
                              properties:
                                domains:
                                  description: |-
                                    Domains contains information about which domains shall be included/excluded for this provider.

                                    Deprecated: This field is deprecated and will be removed in a future release. Please use the DNS extension provider config (e.g. shoot-dns-service) for additional configuration.
                                  properties:
                                    exclude:
                                      description: Exclude is a list of domains that
                                        shall be excluded.
                                      items:
                                        type: string
                                      type: array
                                    include:
                                      description: Include is a list of domains that
                                        shall be included.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                primary:
                                  description: |-
                                    Primary indicates that this DNSProvider is used for shoot related domains.

                                    Deprecated: This field is deprecated and will be removed in a future release. Please use the DNS extension provider config (e.g. shoot-dns-service) for additional and non-primary providers.
                                  type: boolean
                                secretName:
                                  description: SecretName is a name of a secret containing
                                    credentials for the stated domain and the provider.
                                    When not specified, the Gardener will use the
                                    cloud provider credentials referenced by the Shoot
                                    and try to find respective credentials there (primary
                                    provider only). Specifying this field may override
                                    this behavior, i.e. forcing the Gardener to only
                                    look into the given secret.
                                  type: string
                                type:
                                  description: Type is the DNS provider type.
                                  type: string
                                zones:
                                  description: |-
                                    Zones contains information about which hosted zones shall be included/excluded for this provider.

                                    Deprecated: This field is deprecated and will be removed in a future release. Please use the DNS extension provider config (e.g. shoot-dns-service) for additional configuration.
                                  properties:
                                    exclude:
                                      description: Exclude is a list of domains that
                                        shall be excluded.
                                      items:
                                        type: string
                                      type: array
                                    include:
                                      description: Include is a list of domains that
                                        shall be included.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              required:
                              - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - type
                            x-kubernetes-list-type: map
                        type: object
                      exposureClassName:
                        description: ExposureClassName is the optional name of an
                          exposure class to apply a control plane endpoint exposure
                          strategy. This field is immutable.
                        type: string
                      extensions:
                        description: Extensions contain type and provider information
                          for Shoot extensions.
                        items:
                          description: Extension contains type and provider information
                            for extensions.
                          properties:
                            disabled:
                              description: Disabled allows to disable extensions that
                                were marked as 'globally enabled' by Gardener administrators.
                              type: boolean
                            providerConfig:
                              description: ProviderConfig is the configuration passed
                                to extension resource.
                              type: object
                            type:
                              description: Type is the type of the extension resource.
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                      hibernation:
                        description: Hibernation contains information whether the
                          Shoot is suspended or not.
                        properties:
                          enabled:
                            description: Enabled specifies whether the Shoot needs
                              to be hibernated or not. If it is true, the Shoot's
                              desired state is to be hibernated. If it is false or
                              nil, the Shoot's desired state is to be awakened.
                            type: boolean
                          schedules:
                            description: Schedules determine the hibernation schedules.
                            items:
                              description: HibernationSchedule determines the hibernation
                                schedule of a Shoot. A Shoot will be regularly hibernated
                                at each start time and will be woken up at each end
                                time. Start or End can be omitted, though at least
                                one of each has to be specified.
                              properties:
                                end:
                                  description: End is a Cron spec at which time a
                                    Shoot will be woken up.
                                  type: string
                                location:
                                  description: Location is the time location in which
                                    both start and shall be evaluated.
                                  type: string
                                start:
                                  description: Start is a Cron spec at which time
                                    a Shoot will be hibernated.
                                  type: string
                              type: object
                            type: array
                        type: object
                      kubernetes:
                        description: Kubernetes contains the version and configuration
                          settings of the control plane components.
                        properties:
                          clusterAutoscaler:
                            description: ClusterAutoscaler contains the configuration
                              flags for the Kubernetes cluster autoscaler.
                            properties:
                              expander:
                                description: 'Expander defines the algorithm to use
                                  during scale up (default: least-waste). See: https://github.com/gardener/autoscaler/blob/machine-controller-manager-provider/cluster-autoscaler/FAQ.md#what-are-expanders.'
                                type: string
                              ignoreDaemonsetsUtilization:
                                description: 'IgnoreDaemonsetsUtilization allows CA
                                  to ignore DaemonSet pods when calculating resource
                                  utilization for scaling down (default: false).'
                                type: boolean
                              ignoreTaints:
                                description: 'IgnoreTaints specifies a list of taint
                                  keys to ignore in node templates when considering
                                  to scale a node group. Deprecated: Ignore taints
                                  are deprecated as of K8S 1.29 and treated as startup
                                  taints'
                                items:
                                  type: string
                                type: array
                              maxEmptyBulkDelete:
                                description: 'MaxEmptyBulkDelete specifies the maximum
                                  number of empty nodes that can be deleted at the
                                  same time (default: 10).'
                                format: int32
                                type: integer
                              maxGracefulTerminationSeconds:
                                description: 'MaxGracefulTerminationSeconds is the
                                  number of seconds CA waits for pod termination when
                                  trying to scale down a node (default: 600).'
                                format: int32
                                type: integer
                              maxNodeProvisionTime:
                                description: 'MaxNodeProvisionTime defines how long
                                  CA waits for node to be provisioned (default: 20
                                  mins).'
                                type: string
                              newPodScaleUpDelay:
                                description: 'NewPodScaleUpDelay specifies how long
                                  CA should ignore newly created pods before they
                                  have to be considered for scale-up (default: 0s).'
                                type: string
                              scaleDownDelayAfterAdd:
                                description: 'ScaleDownDelayAfterAdd defines how long
                                  after scale up that scale down evaluation resumes
                                  (default: 1 hour).'
                                type: string
                              scaleDownDelayAfterDelete:
                                description: 'ScaleDownDelayAfterDelete how long after
                                  node deletion that scale down evaluation resumes,
                                  defaults to scanInterval (default: 0 secs).'
                                type: string
                              scaleDownDelayAfterFailure:
                                description: 'ScaleDownDelayAfterFailure how long
                                  after scale down failure that scale down evaluation
                                  resumes (default: 3 mins).'
                                type: string
                              scaleDownUnneededTime:
                                description: 'ScaleDownUnneededTime defines how long
                                  a node should be unneeded before it is eligible
                                  for scale down (default: 30 mins).'
                                type: string
                              scaleDownUtilizationThreshold:
                                description: 'ScaleDownUtilizationThreshold defines
                                  the threshold in fraction (0.0 - 1.0) under which
                                  a node is being removed (default: 0.5).'
                                format: double
                                type: number
                              scanInterval:
                                description: 'ScanInterval how often cluster is reevaluated
                                  for scale up or down (default: 10 secs).'
                                type: string
                              startupTaints:
                                description: StartupTaints specifies a list of taint
                                  keys to ignore in node templates when considering
                                  to scale a node group. Cluster Autoscaler treats
                                  nodes tainted with startup taints as unready, but
                                  taken into account during scale up logic, assuming
                                  they will become ready shortly.
                                items:
                                  type: string
                                type: array
                              statusTaints:
                                description: StatusTaints specifies a list of taint
                                  keys to ignore in node templates when considering
                                  to scale a node group. Cluster Autoscaler internally
                                  treats nodes tainted with status taints as ready,
                                  but filtered out during scale up logic.
                                items:
                                  type: string
                                type: array
                              verbosity:
                                description: 'Verbosity allows CA to modify its log
                                  level (default: 2).'
                                format: int32
                                type: integer
                            type: object
                          enableStaticTokenKubeconfig:
                            description: |-
                              EnableStaticTokenKubeconfig indicates whether static token kubeconfig secret will be created for the Shoot cluster. Setting this field to true is not supported.

                              Deprecated: This field is deprecated and will be removed in gardener v1.120
                            type: boolean
                          etcd:
                            description: ETCD contains configuration for etcds of
                              the shoot cluster.
                            properties:
                              events:
                                description: Events contains configuration for the
                                  events etcd.
                                properties:
                                  autoscaling:
                                    description: Autoscaling contains auto-scaling
                                      configuration options for etcd.
                                    properties:
                                      minAllowed:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: MinAllowed configures the minimum
                                          allowed resource requests for vertical pod
                                          autoscaling.. Configuration of minAllowed
                                          resources is an advanced feature that can
                                          help clusters to overcome scale-up delays.
                                          Default values are not applied to this field.
                                        type: object
                                    required:
                                    - minAllowed
                                    type: object
                                type: object
                              main:
                                description: Main contains configuration for the main
                                  etcd.
                                properties:
                                  autoscaling:
                                    description: Autoscaling contains auto-scaling
                                      configuration options for etcd.
                                    properties:
                                      minAllowed:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: MinAllowed configures the minimum
                                          allowed resource requests for vertical pod
                                          autoscaling.. Configuration of minAllowed
                                          resources is an advanced feature that can
                                          help clusters to overcome scale-up delays.
                                          Default values are not applied to this field.
                                        type: object
                                    required:
                                    - minAllowed
                                    type: object
                                type: object
                            type: object
                          kubeAPIServer:
                            description: KubeAPIServer contains configuration settings
                              for the kube-apiserver.
                            properties:
                              admissionPlugins:
                                description: AdmissionPlugins contains the list of
                                  user-defined admission plugins (additional to those
                                  managed by Gardener), and, if desired, the corresponding
                                  configuration.
                                items:
                                  description: AdmissionPlugin contains information
                                    about a specific admission plugin and its corresponding
                                    configuration.
                                  properties:
                                    config:
                                      description: Config is the configuration of
                                        the plugin.
                                      type: object
                                    disabled:
                                      description: Disabled specifies whether this
                                        plugin should be disabled.
                                      type: boolean
                                    kubeconfigSecretName:
                                      description: KubeconfigSecretName specifies
                                        the name of a secret containing the kubeconfig
                                        for this admission plugin.
                                      type: string
                                    name:
                                      description: Name is the name of the plugin.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              apiAudiences:
                                description: APIAudiences are the identifiers of the
                                  API. The service account token authenticator will
                                  validate that tokens used against the API are bound
                                  to at least one of these audiences. Defaults to
                                  ["kubernetes"].
                                items:
                                  type: string
                                type: array
                              auditConfig:
                                description: AuditConfig contains configuration settings
                                  for the audit of the kube-apiserver.
                                properties:
                                  auditPolicy:
                                    description: AuditPolicy contains configuration
                                      settings for audit policy of the kube-apiserver.
                                    properties:
                                      configMapRef:
                                        description: ConfigMapRef is a reference to
                                          a ConfigMap object in the same namespace,
                                          which contains the audit policy for the
                                          kube-apiserver.
                                        properties:
                                          apiVersion:
                                            description: API version of the referent.
                                            type: string
                                          fieldPath:
                                            description: 'If referring to a piece
                                              of an object instead of an entire object,
                                              this string should contain a valid JSON/Go
                                              field access statement, such as desiredState.manifest.containers[2].
                                              For example, if the object reference
                                              is to a container within a pod, this
                                              would take on a value like: "spec.containers{name}"
                                              (where "name" refers to the name of
                                              the container that triggered the event)
                                              or if no container name is specified
                                              "spec.containers[2]" (container with
                                              index 2 in this pod). This syntax is
                                              chosen only to have some well-defined
                                              way of referencing a part of an object.'
                                            type: string
                                          kind:
                                            description: 'Kind of the referent. More
                                              info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                            type: string
                                          namespace:
                                            description: 'Namespace of the referent.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                            type: string
                                          resourceVersion:
                                            description: 'Specific resourceVersion
                                              to which this reference is made, if
                                              any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                            type: string
                                          uid:
                                            description: 'UID of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              autoscaling:
                                description: Autoscaling contains auto-scaling configuration
                                  options for the kube-apiserver.
                                properties:
                                  minAllowed:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: MinAllowed configures the minimum
                                      allowed resource requests for vertical pod autoscaling..
                                      Configuration of minAllowed resources is an
                                      advanced feature that can help clusters to overcome
                                      scale-up delays. Default values are not applied
                                      to this field.
                                    type: object
                                required:
                                - minAllowed
                                type: object
                              defaultNotReadyTolerationSeconds:
                                description: DefaultNotReadyTolerationSeconds indicates
                                  the tolerationSeconds of the toleration for notReady:NoExecute
                                  that is added by default to every pod that does
                                  not already have such a toleration (flag `--default-not-ready-toleration-seconds`).
                                  The field has effect only when the `DefaultTolerationSeconds`
                                  admission plugin is enabled. Defaults to 300.
                                format: int64
                                type: integer
                              defaultUnreachableTolerationSeconds:
                                description: DefaultUnreachableTolerationSeconds indicates
                                  the tolerationSeconds of the toleration for unreachable:NoExecute
                                  that is added by default to every pod that does
                                  not already have such a toleration (flag `--default-unreachable-toleration-seconds`).
                                  The field has effect only when the `DefaultTolerationSeconds`
                                  admission plugin is enabled. Defaults to 300.
                                format: int64
                                type: integer
                              enableAnonymousAuthentication:
                                description: 'EnableAnonymousAuthentication defines
                                  whether anonymous requests to the secure port of
                                  the API server should be allowed (flag `--anonymous-auth`).
                                  See: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/'
                                type: boolean
                              encryptionConfig:
                                description: EncryptionConfig contains customizable
                                  encryption configuration of the Kube API server.
                                properties:
                                  resources:
                                    description: Resources contains the list of resources
                                      that shall be encrypted in addition to secrets.
                                      Each item is a Kubernetes resource name in plural
                                      (resource or resource.group) that should be
                                      encrypted. Wildcards are not supported for now.
                                      See https://github.com/gardener/gardener/blob/master/docs/usage/security/etcd_encryption_config.md
                                      for more details.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - resources
                                type: object
                              eventTTL:
                                description: EventTTL controls the amount of time
                                  to retain events. Defaults to 1h.
                                type: string
                              featureGates:
                                additionalProperties:
                                  type: boolean
                                description: FeatureGates contains information about
                                  enabled feature gates.
                                type: object
                              logging:
                                description: Logging contains configuration for the
                                  log level and HTTP access logs.
                                properties:
                                  httpAccessVerbosity:
                                    description: HTTPAccessVerbosity is the kube-apiserver
                                      access logs level
                                    format: int32
                                    type: integer
                                  verbosity:
                                    description: Verbosity is the kube-apiserver log
                                      verbosity level Defaults to 2.
                                    format: int32
                                    type: integer
                                type: object
                              oidcConfig:
                                description: |-
                                  OIDCConfig contains configuration settings for the OIDC provider.

                                  Deprecated: This field is deprecated and will be forbidden starting from Kubernetes 1.32. Please configure and use structured authentication instead of oidc flags. For more information check https://github.com/gardener/gardener/issues/9858
                                properties:
                                  caBundle:
                                    description: If set, the OpenID server's certificate
                                      will be verified by one of the authorities in
                                      the oidc-ca-file, otherwise the host's root
                                      CA set will be used.
                                    type: string
                                  clientAuthentication:
                                    description: |-
                                      ClientAuthentication can optionally contain client configuration used for kubeconfig generation.

                                      Deprecated: This field has no implemented use and will be forbidden starting from Kubernetes 1.31. It's use was planned for genereting OIDC kubeconfig https://github.com/gardener/gardener/issues/1433
                                    properties:
                                      extraConfig:
                                        additionalProperties:
                                          type: string
                                        description: Extra configuration added to
                                          kubeconfig's auth-provider. Must not be
                                          any of idp-issuer-url, client-id, client-secret,
                                          idp-certificate-authority, idp-certificate-authority-data,
                                          id-token or refresh-token
                                        type: object
                                      secret:
                                        description: The client Secret for the OpenID
                                          Connect client.
                                        type: string
                                    type: object
                                  clientID:
                                    description: The client ID for the OpenID Connect
                                      client, must be set.
                                    type: string
                                  groupsClaim:
                                    description: If provided, the name of a custom
                                      OpenID Connect claim for specifying user groups.
                                      The claim value is expected to be a string or
                                      array of strings. This flag is experimental,
                                      please see the authentication documentation
                                      for further details.
                                    type: string
                                  groupsPrefix:
                                    description: If provided, all groups will be prefixed
                                      with this value to prevent conflicts with other
                                      authentication strategies.
                                    type: string
                                  issuerURL:
                                    description: The URL of the OpenID issuer, only
                                      HTTPS scheme will be accepted. Used to verify
                                      the OIDC JSON Web Token (JWT).
                                    type: string
                                  requiredClaims:
                                    additionalProperties:
                                      type: string
                                    description: key=value pairs that describes a
                                      required claim in the ID Token. If set, the
                                      claim is verified to be present in the ID Token
                                      with a matching value.
                                    type: object
                                  signingAlgs:
                                    description: List of allowed JOSE asymmetric signing
                                      algorithms. JWTs with a 'alg' header value not
                                      in this list will be rejected. Values are defined
                                      by RFC 7518 https://tools.ietf.org/html/rfc7518#section-3.1
                                    items:
                                      type: string
                                    type: array
                                  usernameClaim:
                                    description: The OpenID claim to use as the user
                                      name. Note that claims other than the default
                                      ('sub') is not guaranteed to be unique and immutable.
                                      This flag is experimental, please see the authentication
                                      documentation for further details. (default
                                      "sub")
                                    type: string
                                  usernamePrefix:
                                    description: If provided, all usernames will be
                                      prefixed with this value. If not provided, username
                                      claims other than 'email' are prefixed by the
                                      issuer URL to avoid clashes. To skip any prefixing,
                                      provide the value '-'.
                                    type: string
                                type: object
                              requests:
                                description: Requests contains configuration for request-specific
                                  settings for the kube-apiserver.
                                properties:
                                  maxMutatingInflight:
                                    description: MaxMutatingInflight is the maximum
                                      number of mutating requests in flight at a given
                                      time. When the server exceeds this, it rejects
                                      requests.
                                    format: int32
                                    type: integer
                                  maxNonMutatingInflight:
                                    description: MaxNonMutatingInflight is the maximum
                                      number of non-mutating requests in flight at
                                      a given time. When the server exceeds this,
                                      it rejects requests.
                                    format: int32
                                    type: integer
                                type: object
                              runtimeConfig:
                                additionalProperties:
                                  type: boolean
                                description: RuntimeConfig contains information about
                                  enabled or disabled APIs.
                                type: object
                              serviceAccountConfig:
                                description: ServiceAccountConfig contains configuration
                                  settings for the service account handling of the
                                  kube-apiserver.
                                properties:
                                  acceptedIssuers:
                                    description: AcceptedIssuers is an additional
                                      set of issuers that are used to determine which
                                      service account tokens are accepted. These values
                                      are not used to generate new service account
                                      tokens. Only useful when service account tokens
                                      are also issued by another external system or
                                      a change of the current issuer that is used
                                      for generating tokens is being performed.
                                    items:
                                      type: string
                                    type: array
                                  extendTokenExpiration:
                                    description: ExtendTokenExpiration turns on projected
                                      service account expiration extension during
                                      token generation, which helps safe transition
                                      from legacy token to bound service account token
                                      feature. If this flag is enabled, admission
                                      injected tokens would be extended up to 1 year
                                      to prevent unexpected failure during transition,
                                      ignoring value of service-account-max-token-expiration.
                                    type: boolean
                                  issuer:
                                    description: Issuer is the identifier of the service
                                      account token issuer. The issuer will assert
                                      this identifier in "iss" claim of issued tokens.
                                      This value is used to generate new service account
                                      tokens. This value is a string or URI. Defaults
                                      to URI of the API server.
                                    type: string
                                  maxTokenExpiration:
                                    description: MaxTokenExpiration is the maximum
                                      validity duration of a token created by the
                                      service account token issuer. If an otherwise
                                      valid TokenRequest with a validity duration
                                      larger than this value is requested, a token
                                      will be issued with a validity duration of this
                                      value. This field must be within [30d,90d].
                                    type: string
                                type: object
                              structuredAuthentication:
                                description: StructuredAuthentication contains configuration
                                  settings for structured authentication for the kube-apiserver.
                                  This field is only available for Kubernetes v1.30
                                  or later.
                                properties:
                                  configMapName:
                                    description: ConfigMapName is the name of the
                                      ConfigMap in the project namespace which contains
                                      AuthenticationConfiguration for the kube-apiserver.
                                    type: string
                                required:
                                - configMapName
                                type: object
                              structuredAuthorization:
                                description: StructuredAuthorization contains configuration
                                  settings for structured authorization for the kube-apiserver.
                                  This field is only available for Kubernetes v1.30
                                  or later.
                                properties:
                                  configMapName:
                                    description: ConfigMapName is the name of the
                                      ConfigMap in the project namespace which contains
                                      AuthorizationConfiguration for the kube-apiserver.
                                    type: string
                                  kubeconfigs:
                                    description: Kubeconfigs is a list of references
                                      for kubeconfigs for the authorization webhooks.
                                    items:
                                      description: AuthorizerKubeconfigReference is
                                        a reference for a kubeconfig for a authorization
                                        webhook.
                                      properties:
                                        authorizerName:
                                          description: AuthorizerName is the name
                                            of a webhook authorizer.
                                          type: string
                                        secretName:
                                          description: SecretName is the name of a
                                            secret containing the kubeconfig.
                                          type: string
                                      required:
                                      - authorizerName
                                      - secretName
                                      type: object
                                    type: array
                                required:
                                - configMapName
                                - kubeconfigs
                                type: object
                              watchCacheSizes:
                                description: WatchCacheSizes contains configuration
                                  of the API server's watch cache sizes. Configuring
                                  these flags might be useful for large-scale Shoot
                                  clusters with a lot of parallel update requests
                                  and a lot of watching controllers (e.g. large ManagedSeed
                                  clusters). When the API server's watch cache's capacity
                                  is too small to cope with the amount of update requests
                                  and watchers for a particular resource, it might
                                  happen that controller watches are permanently stopped
                                  with `too old resource version` errors. Starting
                                  from kubernetes v1.19, the API server's watch cache
                                  size is adapted dynamically and setting the watch
                                  cache size flags will have no effect, except when
                                  setting it to 0 (which disables the watch cache).
                                properties:
                                  default:
                                    description: 'Default configures the default watch
                                      cache size of the kube-apiserver (flag `--default-watch-cache-size`,
                                      defaults to 100). See: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/'
                                    format: int32
                                    type: integer
                                  resources:
                                    description: 'Resources configures the watch cache
                                      size of the kube-apiserver per resource (flag
                                      `--watch-cache-sizes`). See: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/'
                                    items:
                                      description: ResourceWatchCacheSize contains
                                        configuration of the API server's watch cache
                                        size for one specific resource.
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the API group of
                                            the resource for which the watch cache
                                            size should be configured. An unset value
                                            is used to specify the legacy core API
                                            (e.g. for `secrets`).
                                          type: string
                                        resource:
                                          description: Resource is the name of the
                                            resource for which the watch cache size
                                            should be configured (in lowercase plural
                                            form, e.g. `secrets`).
                                          type: string
                                        size:
                                          description: CacheSize specifies the watch
                                            cache size that should be configured for
                                            the specified resource.
                                          format: int32
                                          type: integer
                                      required:
                                      - resource
                                      - size
                                      type: object
                                    type: array
                                type: object
                            type: object
                          kubeControllerManager:
                            description: KubeControllerManager contains configuration
                              settings for the kube-controller-manager.
                            properties:
                              featureGates:
                                additionalProperties:
                                  type: boolean
                                description: FeatureGates contains information about
                                  enabled feature gates.
                                type: object
                              horizontalPodAutoscaler:
                                description: HorizontalPodAutoscalerConfig contains
                                  horizontal pod autoscaler configuration settings
                                  for the kube-controller-manager.
                                properties:
                                  cpuInitializationPeriod:
                                    description: The period after which a ready pod
                                      transition is considered to be the first.
                                    type: string
                                  downscaleStabilization:
                                    description: The configurable window at which
                                      the controller will choose the highest recommendation
                                      for autoscaling.
                                    type: string
                                  initialReadinessDelay:
                                    description: The configurable period at which
                                      the horizontal pod autoscaler considers a Pod
                                      “not yet ready” given that it’s unready and
                                      it has  transitioned to unready during that
                                      time.
                                    type: string
                                  syncPeriod:
                                    description: The period for syncing the number
                                      of pods in horizontal pod autoscaler.
                                    type: string
                                  tolerance:
                                    description: The minimum change (from 1.0) in
                                      the desired-to-actual metrics ratio for the
                                      horizontal pod autoscaler to consider scaling.
                                    format: double
                                    type: number
                                type: object
                              nodeCIDRMaskSize:
                                description: NodeCIDRMaskSize defines the mask size
                                  for node cidr in cluster (default is 24). This field
                                  is immutable.
                                format: int32
                                type: integer
                              nodeMonitorGracePeriod:
                                description: NodeMonitorGracePeriod defines the grace
                                  period before an unresponsive node is marked unhealthy.
                                type: string
                              podEvictionTimeout:
                                description: |-
                                  PodEvictionTimeout defines the grace period for deleting pods on failed nodes. Defaults to 2m.

                                  Deprecated: The corresponding kube-controller-manager flag `--pod-eviction-timeout` is deprecated in favor of the kube-apiserver flags `--default-not-ready-toleration-seconds` and `--default-unreachable-toleration-seconds`. The `--pod-eviction-timeout` flag does not have effect when the taint based eviction is enabled. The taint based eviction is beta (enabled by default) since Kubernetes 1.13 and GA since Kubernetes 1.18. Hence, instead of setting this field, set the `spec.kubernetes.kubeAPIServer.defaultNotReadyTolerationSeconds` and `spec.kubernetes.kubeAPIServer.defaultUnreachableTolerationSeconds`. This field will be removed in gardener v1.120.
                                type: string
                            type: object
                          kubeProxy:
                            description: KubeProxy contains configuration settings
                              for the kube-proxy.
                            properties:
                              enabled:
                                description: Enabled indicates whether kube-proxy
                                  should be deployed or not. Depending on the networking
                                  extensions switching kube-proxy off might be rejected.
                                  Consulting the respective documentation of the used
                                  networking extension is recommended before using
                                  this field. defaults to true if not specified.
                                type: boolean
                              featureGates:
                                additionalProperties:
                                  type: boolean
                                description: FeatureGates contains information about
                                  enabled feature gates.
                                type: object
                              mode:
                                description: Mode specifies which proxy mode to use.
                                  defaults to IPTables.
                                type: string
                            type: object
                          kubeScheduler:
                            description: KubeScheduler contains configuration settings
                              for the kube-scheduler.
                            properties:
                              featureGates:
                                additionalProperties:
                                  type: boolean
                                description: FeatureGates contains information about
                                  enabled feature gates.
                                type: object
                              kubeMaxPDVols:
                                description: 'KubeMaxPDVols allows to configure the
                                  `KUBE_MAX_PD_VOLS` environment variable for the
                                  kube-scheduler. Please find more information here:
                                  https://kubernetes.io/docs/concepts/storage/storage-limits/#custom-limits
                                  Note that using this field is considered alpha-/experimental-level
                                  and is on your own risk. You should be aware of
                                  all the side-effects and consequences when changing
                                  it.'
                                type: string
                              profile:
                                description: Profile configures the scheduling profile
                                  for the cluster. If not specified, the used profile
                                  is "balanced" (provides the default kube-scheduler
                                  behavior).
                                type: string
                            type: object
                          kubelet:
                            description: Kubelet contains configuration settings for
                              the kubelet.
                            properties:
                              containerLogMaxFiles:
                                description: Maximum number of container log files
                                  that can be present for a container.
                                format: int32
                                type: integer
                              containerLogMaxSize:
                                anyOf:
                                - type: integer
                                - type: string
                                description: 'A quantity defines the maximum size
                                  of the container log file before it is rotated.
                                  For example: "5Mi" or "256Ki". Default: 100Mi'
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              cpuCFSQuota:
                                description: CPUCFSQuota allows you to disable/enable
                                  CPU throttling for Pods.
                                type: boolean
                              cpuManagerPolicy:
                                description: 'CPUManagerPolicy allows to set alternative
                                  CPU management policies (default: none).'
                                type: string
                              evictionHard:
                                description: |-
                                  EvictionHard describes a set of eviction thresholds (e.g. memory.available<1Gi) that if met would trigger a Pod eviction. Default:
                                    memory.available:   "100Mi/1Gi/5%"
                                    nodefs.available:   "5%"
                                    nodefs.inodesFree:  "5%"
                                    imagefs.available:  "5%"
                                    imagefs.inodesFree: "5%"
                                properties:
                                  imageFSAvailable:
                                    description: ImageFSAvailable is the threshold
                                      for the free disk space in the imagefs filesystem
                                      (docker images and container writable layers).
                                    type: string
                                  imageFSInodesFree:
                                    description: ImageFSInodesFree is the threshold
                                      for the available inodes in the imagefs filesystem.
                                    type: string
                                  memoryAvailable:
                                    description: MemoryAvailable is the threshold
                                      for the free memory on the host server.
                                    type: string
                                  nodeFSAvailable:
                                    description: NodeFSAvailable is the threshold
                                      for the free disk space in the nodefs filesystem
                                      (docker volumes, logs, etc).
                                    type: string
                                  nodeFSInodesFree:
                                    description: NodeFSInodesFree is the threshold
                                      for the available inodes in the nodefs filesystem.
                                    type: string
                                type: object
                              evictionMaxPodGracePeriod:
                                description: 'EvictionMaxPodGracePeriod describes
                                  the maximum allowed grace period (in seconds) to
                                  use when terminating pods in response to a soft
                                  eviction threshold being met. Default: 90'
                                format: int32
                                type: integer
                              evictionMinimumReclaim:
                                description: 'EvictionMinimumReclaim configures the
                                  amount of resources below the configured eviction
                                  threshold that the kubelet attempts to reclaim whenever
                                  the kubelet observes resource pressure. Default:
                                  0 for each resource'
                                properties:
                                  imageFSAvailable:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: ImageFSAvailable is the threshold
                                      for the disk space reclaim in the imagefs filesystem
                                      (docker images and container writable layers).
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  imageFSInodesFree:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: ImageFSInodesFree is the threshold
                                      for the inodes reclaim in the imagefs filesystem.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  memoryAvailable:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: MemoryAvailable is the threshold
                                      for the memory reclaim on the host server.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  nodeFSAvailable:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: NodeFSAvailable is the threshold
                                      for the disk space reclaim in the nodefs filesystem
                                      (docker volumes, logs, etc).
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  nodeFSInodesFree:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: NodeFSInodesFree is the threshold
                                      for the inodes reclaim in the nodefs filesystem.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                type: object
                              evictionPressureTransitionPeriod:
                                description: 'EvictionPressureTransitionPeriod is
                                  the duration for which the kubelet has to wait before
                                  transitioning out of an eviction pressure condition.
                                  Default: 4m0s'
                                type: string
                              evictionSoft:
                                description: |-
                                  EvictionSoft describes a set of eviction thresholds (e.g. memory.available<1.5Gi) that if met over a corresponding grace period would trigger a Pod eviction. Default:
                                    memory.available:   "200Mi/1.5Gi/10%"
                                    nodefs.available:   "10%"
                                    nodefs.inodesFree:  "10%"
                                    imagefs.available:  "10%"
                                    imagefs.inodesFree: "10%"
                                properties:
                                  imageFSAvailable:
                                    description: ImageFSAvailable is the threshold
                                      for the free disk space in the imagefs filesystem
                                      (docker images and container writable layers).
                                    type: string
                                  imageFSInodesFree:
                                    description: ImageFSInodesFree is the threshold
                                      for the available inodes in the imagefs filesystem.
                                    type: string
                                  memoryAvailable:
                                    description: MemoryAvailable is the threshold
                                      for the free memory on the host server.
                                    type: string
                                  nodeFSAvailable:
                                    description: NodeFSAvailable is the threshold
                                      for the free disk space in the nodefs filesystem
                                      (docker volumes, logs, etc).
                                    type: string
                                  nodeFSInodesFree:
                                    description: NodeFSInodesFree is the threshold
                                      for the available inodes in the nodefs filesystem.
                                    type: string
                                type: object
                              evictionSoftGracePeriod:
                                description: |-
                                  EvictionSoftGracePeriod describes a set of eviction grace periods (e.g. memory.available=1m30s) that correspond to how long a soft eviction threshold must hold before triggering a Pod eviction. Default:
                                    memory.available:   1m30s
                                    nodefs.available:   1m30s
                                    nodefs.inodesFree:  1m30s
                                    imagefs.available:  1m30s
                                    imagefs.inodesFree: 1m30s
                                properties:
                                  imageFSAvailable:
                                    description: ImageFSAvailable is the grace period
                                      for the ImageFSAvailable eviction threshold.
                                    type: string
                                  imageFSInodesFree:
                                    description: ImageFSInodesFree is the grace period
                                      for the ImageFSInodesFree eviction threshold.
                                    type: string
                                  memoryAvailable:
                                    description: MemoryAvailable is the grace period
                                      for the MemoryAvailable eviction threshold.
                                    type: string
                                  nodeFSAvailable:
                                    description: NodeFSAvailable is the grace period
                                      for the NodeFSAvailable eviction threshold.
                                    type: string
                                  nodeFSInodesFree:
                                    description: NodeFSInodesFree is the grace period
                                      for the NodeFSInodesFree eviction threshold.
                                    type: string
                                type: object
                              failSwapOn:
                                description: FailSwapOn makes the Kubelet fail to
                                  start if swap is enabled on the node. (default true).
                                type: boolean
                              featureGates:
                                additionalProperties:
                                  type: boolean
                                description: FeatureGates contains information about
                                  enabled feature gates.
                                type: object
                              imageGCHighThresholdPercent:
                                description: 'ImageGCHighThresholdPercent describes
                                  the percent of the disk usage which triggers image
                                  garbage collection. Default: 50'
                                format: int32
                                type: integer
                              imageGCLowThresholdPercent:
                                description: 'ImageGCLowThresholdPercent describes
                                  the percent of the disk to which garbage collection
                                  attempts to free. Default: 40'
                                format: int32
                                type: integer
                              kubeReserved:
                                description: 'KubeReserved is the configuration for
                                  resources reserved for kubernetes node components
                                  (mainly kubelet and container runtime). When updating
                                  these values, be aware that cgroup resizes may not
                                  succeed on active worker nodes. Look for the NodeAllocatableEnforced
                                  event to determine if the configuration was applied.
                                  Default: cpu=80m,memory=1Gi,pid=20k'
                                properties:
                                  cpu:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: CPU is the reserved cpu.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  ephemeralStorage:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: EphemeralStorage is the reserved
                                      ephemeral-storage.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  memory:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Memory is the reserved memory.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  pid:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: PID is the reserved process-ids.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                type: object
                              maxPods:
                                description: 'MaxPods is the maximum number of Pods
                                  that are allowed by the Kubelet. Default: 110'
                                format: int32
                                type: integer
                              memorySwap:
                                description: MemorySwap configures swap memory available
                                  to container workloads.
                                properties:
                                  swapBehavior:
                                    description: 'SwapBehavior configures swap memory
                                      available to container workloads. May be one
                                      of {"LimitedSwap", "UnlimitedSwap"} defaults
                                      to: LimitedSwap'
                                    type: string
                                type: object
                              podPidsLimit:
                                description: PodPIDsLimit is the maximum number of
                                  process IDs per pod allowed by the kubelet.
                                format: int64
                                type: integer
                              protectKernelDefaults:
                                description: ProtectKernelDefaults ensures that the
                                  kernel tunables are equal to the kubelet defaults.
                                  Defaults to true.
                                type: boolean
                              registryBurst:
                                description: 'RegistryBurst is the maximum size of
                                  bursty pulls, temporarily allows pulls to burst
                                  to this number, while still not exceeding registryPullQPS.
                                  The value must not be a negative number. Only used
                                  if registryPullQPS is greater than 0. Default: 10'
                                format: int32
                                type: integer
                              registryPullQPS:
                                description: 'RegistryPullQPS is the limit of registry
                                  pulls per second. The value must not be a negative
                                  number. Setting it to 0 means no limit. Default:
                                  5'
                                format: int32
                                type: integer
                              seccompDefault:
                                description: SeccompDefault enables the use of `RuntimeDefault`
                                  as the default seccomp profile for all workloads.
                                type: boolean
                              serializeImagePulls:
                                description: 'SerializeImagePulls describes whether
                                  the images are pulled one at a time. Default: true'
                                type: boolean
                              streamingConnectionIdleTimeout:
                                description: 'StreamingConnectionIdleTimeout is the
                                  maximum time a streaming connection can be idle
                                  before the connection is automatically closed. This
                                  field cannot be set lower than "30s" or greater
                                  than "4h". Default: "5m".'
                                type: string
                              systemReserved:
                                description: |-
                                  SystemReserved is the configuration for resources reserved for system processes not managed by kubernetes (e.g. journald). When updating these values, be aware that cgroup resizes may not succeed on active worker nodes. Look for the NodeAllocatableEnforced event to determine if the configuration was applied.

                                  Deprecated: Separately configuring resource reservations for system processes is deprecated in Gardener and will be forbidden starting from Kubernetes 1.31. Please merge existing resource reservations into the kubeReserved field.
                                properties:
                                  cpu:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: CPU is the reserved cpu.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  ephemeralStorage:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: EphemeralStorage is the reserved
                                      ephemeral-storage.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  memory:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Memory is the reserved memory.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  pid:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: PID is the reserved process-ids.
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                type: object
                            type: object
                          version:
                            description: Version is the semantic Kubernetes version
                              to use for the Shoot cluster. Defaults to the highest
                              supported minor and patch version given in the referenced
                              cloud profile. The version can be omitted completely
                              or partially specified, e.g. `<major>.<minor>`.
                            type: string
                          verticalPodAutoscaler:
                            description: VerticalPodAutoscaler contains the configuration
                              flags for the Kubernetes vertical pod autoscaler.
                            properties:
                              cpuHistogramDecayHalfLife:
                                description: 'CPUHistogramDecayHalfLife is the amount
                                  of time it takes a historical CPU usage sample to
                                  lose half of its weight. (default: 24h)'
                                type: string
                              enabled:
                                description: Enabled specifies whether the Kubernetes
                                  VPA shall be enabled for the shoot cluster.
                                type: boolean
                              evictAfterOOMThreshold:
                                description: 'EvictAfterOOMThreshold defines the threshold
                                  that will lead to pod eviction in case it OOMed
                                  in less than the given threshold since its start
                                  and if it has only one container (default: 10m0s).'
                                type: string
                              evictionRateBurst:
                                description: 'EvictionRateBurst defines the burst
                                  of pods that can be evicted (default: 1)'
                                format: int32
                                type: integer
                              evictionRateLimit:
                                description: 'EvictionRateLimit defines the number
                                  of pods that can be evicted per second. A rate limit
                                  set to 0 or -1 will disable the rate limiter (default:
                                  -1).'
                                format: double
                                type: number
                              evictionTolerance:
                                description: 'EvictionTolerance defines the fraction
                                  of replica count that can be evicted for update
                                  in case more than one pod can be evicted (default:
                                  0.5).'
                                format: double
                                type: number
                              memoryAggregationInterval:
                                description: 'MemoryAggregationInterval is the length
                                  of a single interval, for which the peak memory
                                  usage is computed. (default: 24h)'
                                type: string
                              memoryAggregationIntervalCount:
                                description: 'MemoryAggregationIntervalCount is the
                                  number of consecutive memory-aggregation-intervals
                                  which make up the MemoryAggregationWindowLength
                                  which in turn is the period for memory usage aggregation
                                  by VPA. In other words, `MemoryAggregationWindowLength
                                  = memory-aggregation-interval * memory-aggregation-interval-count`.
                                  (default: 8)'
                                format: int64
                                type: integer
                              memoryHistogramDecayHalfLife:
                                description: 'MemoryHistogramDecayHalfLife is the
                                  amount of time it takes a historical memory usage
                                  sample to lose half of its weight. (default: 24h)'
                                type: string
                              recommendationLowerBoundCPUPercentile:
                                description: 'RecommendationLowerBoundCPUPercentile
                                  is the usage percentile that will be used for the
                                  lower bound on CPU recommendation. (default: 0.5)'
                                format: double
                                type: number
                              recommendationLowerBoundMemoryPercentile:
                                description: 'RecommendationLowerBoundMemoryPercentile
                                  is the usage percentile that will be used for the
                                  lower bound on memory recommendation. (default:
                                  0.5)'
                                format: double
                                type: number
                              recommendationMarginFraction:
                                description: 'RecommendationMarginFraction is the
                                  fraction of usage added as the safety margin to
                                  the recommended request (default: 0.15).'
                                format: double
                                type: number
                              recommendationUpperBoundCPUPercentile:
                                description: 'RecommendationUpperBoundCPUPercentile
                                  is the usage percentile that will be used for the
                                  upper bound on CPU recommendation. (default: 0.95)'
                                format: double
                                type: number
                              recommendationUpperBoundMemoryPercentile:
                                description: 'RecommendationUpperBoundMemoryPercentile
                                  is the usage percentile that will be used for the
                                  upper bound on memory recommendation. (default:
                                  0.95)'
                                format: double
                                type: number
                              recommenderInterval:
                                description: 'RecommenderInterval is the interval
                                  how often metrics should be fetched (default: 1m0s).'
                                type: string
                              targetCPUPercentile:
                                description: 'TargetCPUPercentile is the usage percentile
                                  that will be used as a base for CPU target recommendation.
                                  Doesn''t affect CPU lower bound, CPU upper bound
                                  nor memory recommendations. (default: 0.9)'
                                format: double
                                type: number
                              targetMemoryPercentile:
                                description: 'TargetMemoryPercentile is the usage
                                  percentile that will be used as a base for memory
                                  target recommendation. Doesn''t affect memory lower
                                  bound nor memory upper bound. (default: 0.9)'
                                format: double
                                type: number
                              updaterInterval:
                                description: 'UpdaterInterval is the interval how
                                  often the updater should run (default: 1m0s).'
                                type: string
                            required:
                            - enabled
                            type: object
                        type: object
                      maintenance:
                        description: Maintenance contains information about the time
                          window for maintenance operations and which operations should
                          be performed.
                        properties:
                          autoUpdate:
                            description: AutoUpdate contains information about which
                              constraints should be automatically updated.
                            properties:
                              kubernetesVersion:
                                description: 'KubernetesVersion indicates whether
                                  the patch Kubernetes version may be automatically
                                  updated (default: true).'
                                type: boolean
                              machineImageVersion:
                                description: 'MachineImageVersion indicates whether
                                  the machine image version may be automatically updated
                                  (default: true).'
                                type: boolean
                            required:
                            - kubernetesVersion
                            type: object
                          confineSpecUpdateRollout:
                            description: ConfineSpecUpdateRollout prevents that changes/updates
                              to the shoot specification will be rolled out immediately.
                              Instead, they are rolled out during the shoot's maintenance
                              time window. There is one exception that will trigger
                              an immediate roll out which is changes to the Spec.Hibernation.Enabled
                              field.
                            type: boolean
                          timeWindow:
                            description: TimeWindow contains information about the
                              time window for maintenance operations.
                            properties:
                              begin:
                                description: Begin is the beginning of the time window
                                  in the format HHMMSS+ZONE, e.g. "220000+0100". If
                                  not present, a random value will be computed.
                                type: string
                              end:
                                description: End is the end of the time window in
                                  the format HHMMSS+ZONE, e.g. "220000+0100". If not
                                  present, the value will be computed based on the
                                  "Begin" value.
                                type: string
                            required:
                            - begin
                            - end
                            type: object
                        type: object
                      monitoring:
                        description: Monitoring contains information about custom
                          monitoring configurations for the shoot.
                        properties:
                          alerting:
                            description: Alerting contains information about the alerting
                              configuration for the shoot cluster.
                            properties:
                              emailReceivers:
                                description: MonitoringEmailReceivers is a list of
                                  recipients for alerts
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      networking:
                        description: Networking contains information about cluster
                          networking such as CNI Plugin type, CIDRs, ...etc.
                        properties:
                          ipFamilies:
                            description: IPFamilies specifies the IP protocol versions
                              to use for shoot networking. This field is immutable.
                              See https://github.com/gardener/gardener/blob/master/docs/development/ipv6.md.
                              Defaults to ["IPv4"].
                            items:
                              type: string
                            type: array
                          nodes:
                            description: Nodes is the CIDR of the entire node network.
                              This field is mutable.
                            type: string
                          pods:
                            description: Pods is the CIDR of the pod network. This
                              field is immutable.
                            type: string
                          providerConfig:
                            description: ProviderConfig is the configuration passed
                              to network resource.
                            type: object
                          services:
                            description: Services is the CIDR of the service network.
                              This field is immutable.
                            type: string
                          type:
                            description: Type identifies the type of the networking
                              plugin. This field is immutable.
                            type: string
                        type: object
                      provider:
                        description: Provider contains all provider-specific and provider-relevant
                          information.
                        properties:
                          controlPlaneConfig:
                            description: ControlPlaneConfig contains the provider-specific
                              control plane config blob. Please look up the concrete
                              definition in the documentation of your provider extension.
                            type: object
                          infrastructureConfig:
                            description: InfrastructureConfig contains the provider-specific
                              infrastructure config blob. Please look up the concrete
                              definition in the documentation of your provider extension.
                            type: object
                          type:
                            description: Type is the type of the provider. This field
                              is immutable.
                            type: string
                          workers:
                            description: Workers is a list of worker groups.
                            items:
                              description: Worker is the base definition of a worker
                                group.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations is a map of key/value pairs
                                    for annotations for all the `Node` objects in
                                    this worker pool.
                                  type: object
                                caBundle:
                                  description: CABundle is a certificate bundle which
                                    will be installed onto every machine of this worker
                                    pool.
                                  type: string
                                clusterAutoscaler:
                                  description: ClusterAutoscaler contains the cluster
                                    autoscaler configurations for the worker pool.
                                  properties:
                                    maxNodeProvisionTime:
                                      description: MaxNodeProvisionTime defines how
                                        long CA waits for node to be provisioned.
                                      type: string
                                    scaleDownGpuUtilizationThreshold:
                                      description: ScaleDownGpuUtilizationThreshold
                                        defines the threshold in fraction (0.0 - 1.0)
                                        of gpu resources under which a node is being
                                        removed.
                                      format: double
                                      type: number
                                    scaleDownUnneededTime:
                                      description: ScaleDownUnneededTime defines how
                                        long a node should be unneeded before it is
                                        eligible for scale down.
                                      type: string
                                    scaleDownUnreadyTime:
                                      description: ScaleDownUnreadyTime defines how
                                        long an unready node should be unneeded before
                                        it is eligible for scale down.
                                      type: string
                                    scaleDownUtilizationThreshold:
                                      description: ScaleDownUtilizationThreshold defines
                                        the threshold in fraction (0.0 - 1.0) under
                                        which a node is being removed.
                                      format: double
                                      type: number
                                  type: object
                                controlPlane:
                                  additionalProperties:
                                    description: WorkerControlPlane specifies that
                                      the shoot cluster control plane components should
                                      be running in this worker pool.
                                    type: object
                                  description: ControlPlane specifies that the shoot
                                    cluster control plane components should be running
                                    in this worker pool. This is only relevant for
                                    autonomous shoot clusters.
                                  type: object
                                cri:
                                  description: CRI contains configurations of CRI
                                    support of every machine in the worker pool. Defaults
                                    to a CRI with name `containerd`.
                                  properties:
                                    containerRuntimes:
                                      description: ContainerRuntimes is the list of
                                        the required container runtimes supported
                                        for a worker pool.
                                      items:
                                        description: ContainerRuntime contains information
                                          about worker's available container runtime
                                        properties:
                                          providerConfig:
                                            description: ProviderConfig is the configuration
                                              passed to container runtime resource.
                                            type: object
                                          type:
                                            description: Type is the type of the Container
                                              Runtime.
                                            type: string
                                        required:
                                        - type
                                        type: object
                                      type: array
                                    name:
                                      description: The name of the CRI library. Supported
                                        values are `containerd`.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                dataVolumes:
                                  description: DataVolumes contains a list of additional
                                    worker volumes.
                                  items:
                                    description: DataVolume contains information about
                                      a data volume.
                                    properties:
                                      encrypted:
                                        description: Encrypted determines if the volume
                                          should be encrypted.
                                        type: boolean
                                      name:
                                        description: Name of the volume to make it
                                          referenceable.
                                        type: string
                                      size:
                                        description: VolumeSize is the size of the
                                          volume.
                                        type: string
                                      type:
                                        description: Type is the type of the volume.
                                        type: string
                                    required:
                                    - name
                                    - size
                                    type: object
                                  type: array
                                kubeletDataVolumeName:
                                  description: KubeletDataVolumeName contains the
                                    name of a dataVolume that should be used for storing
                                    kubelet state.
                                  type: string
                                kubernetes:
                                  description: Kubernetes contains configuration for
                                    Kubernetes components related to this worker pool.
                                  properties:
                                    kubelet:
                                      description: Kubelet contains configuration
                                        settings for all kubelets of this worker pool.
                                        If set, all `spec.kubernetes.kubelet` settings
                                        will be overwritten for this worker pool (no
                                        merge of settings).
                                      properties:
                                        containerLogMaxFiles:
                                          description: Maximum number of container
                                            log files that can be present for a container.
                                          format: int32
                                          type: integer
                                        containerLogMaxSize:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: 'A quantity defines the maximum
                                            size of the container log file before
                                            it is rotated. For example: "5Mi" or "256Ki".
                                            Default: 100Mi'
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        cpuCFSQuota:
                                          description: CPUCFSQuota allows you to disable/enable
                                            CPU throttling for Pods.
                                          type: boolean
                                        cpuManagerPolicy:
                                          description: 'CPUManagerPolicy allows to
                                            set alternative CPU management policies
                                            (default: none).'
                                          type: string
                                        evictionHard:
                                          description: |-
                                            EvictionHard describes a set of eviction thresholds (e.g. memory.available<1Gi) that if met would trigger a Pod eviction. Default:
                                              memory.available:   "100Mi/1Gi/5%"
                                              nodefs.available:   "5%"
                                              nodefs.inodesFree:  "5%"
                                              imagefs.available:  "5%"
                                              imagefs.inodesFree: "5%"
                                          properties:
                                            imageFSAvailable:
                                              description: ImageFSAvailable is the
                                                threshold for the free disk space
                                                in the imagefs filesystem (docker
                                                images and container writable layers).
                                              type: string
                                            imageFSInodesFree:
                                              description: ImageFSInodesFree is the
                                                threshold for the available inodes
                                                in the imagefs filesystem.
                                              type: string
                                            memoryAvailable:
                                              description: MemoryAvailable is the
                                                threshold for the free memory on the
                                                host server.
                                              type: string
                                            nodeFSAvailable:
                                              description: NodeFSAvailable is the
                                                threshold for the free disk space
                                                in the nodefs filesystem (docker volumes,
                                                logs, etc).
                                              type: string
                                            nodeFSInodesFree:
                                              description: NodeFSInodesFree is the
                                                threshold for the available inodes
                                                in the nodefs filesystem.
                                              type: string
                                          type: object
                                        evictionMaxPodGracePeriod:
                                          description: 'EvictionMaxPodGracePeriod
                                            describes the maximum allowed grace period
                                            (in seconds) to use when terminating pods
                                            in response to a soft eviction threshold
                                            being met. Default: 90'
                                          format: int32
                                          type: integer
                                        evictionMinimumReclaim:
                                          description: 'EvictionMinimumReclaim configures
                                            the amount of resources below the configured
                                            eviction threshold that the kubelet attempts
                                            to reclaim whenever the kubelet observes
                                            resource pressure. Default: 0 for each
                                            resource'
                                          properties:
                                            imageFSAvailable:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: ImageFSAvailable is the
                                                threshold for the disk space reclaim
                                                in the imagefs filesystem (docker
                                                images and container writable layers).
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            imageFSInodesFree:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: ImageFSInodesFree is the
                                                threshold for the inodes reclaim in
                                                the imagefs filesystem.
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            memoryAvailable:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: MemoryAvailable is the
                                                threshold for the memory reclaim on
                                                the host server.
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            nodeFSAvailable:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: NodeFSAvailable is the
                                                threshold for the disk space reclaim
                                                in the nodefs filesystem (docker volumes,
                                                logs, etc).
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            nodeFSInodesFree:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: NodeFSInodesFree is the
                                                threshold for the inodes reclaim in
                                                the nodefs filesystem.
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                          type: object
                                        evictionPressureTransitionPeriod:
                                          description: 'EvictionPressureTransitionPeriod
                                            is the duration for which the kubelet
                                            has to wait before transitioning out of
                                            an eviction pressure condition. Default:
                                            4m0s'
                                          type: string
                                        evictionSoft:
                                          description: |-
                                            EvictionSoft describes a set of eviction thresholds (e.g. memory.available<1.5Gi) that if met over a corresponding grace period would trigger a Pod eviction. Default:
                                              memory.available:   "200Mi/1.5Gi/10%"
                                              nodefs.available:   "10%"
                                              nodefs.inodesFree:  "10%"
                                              imagefs.available:  "10%"
                                              imagefs.inodesFree: "10%"
                                          properties:
                                            imageFSAvailable:
                                              description: ImageFSAvailable is the
                                                threshold for the free disk space
                                                in the imagefs filesystem (docker
                                                images and container writable layers).
                                              type: string
                                            imageFSInodesFree:
                                              description: ImageFSInodesFree is the
                                                threshold for the available inodes
                                                in the imagefs filesystem.
                                              type: string
                                            memoryAvailable:
                                              description: MemoryAvailable is the
                                                threshold for the free memory on the
                                                host server.
                                              type: string
                                            nodeFSAvailable:
                                              description: NodeFSAvailable is the
                                                threshold for the free disk space
                                                in the nodefs filesystem (docker volumes,
                                                logs, etc).
                                              type: string
                                            nodeFSInodesFree:
                                              description: NodeFSInodesFree is the
                                                threshold for the available inodes
                                                in the nodefs filesystem.
                                              type: string
                                          type: object
                                        evictionSoftGracePeriod:
                                          description: |-
                                            EvictionSoftGracePeriod describes a set of eviction grace periods (e.g. memory.available=1m30s) that correspond to how long a soft eviction threshold must hold before triggering a Pod eviction. Default:
                                              memory.available:   1m30s
                                              nodefs.available:   1m30s
                                              nodefs.inodesFree:  1m30s
                                              imagefs.available:  1m30s
                                              imagefs.inodesFree: 1m30s
                                          properties:
                                            imageFSAvailable:
                                              description: ImageFSAvailable is the
                                                grace period for the ImageFSAvailable
                                                eviction threshold.
                                              type: string
                                            imageFSInodesFree:
                                              description: ImageFSInodesFree is the
                                                grace period for the ImageFSInodesFree
                                                eviction threshold.
                                              type: string
                                            memoryAvailable:
                                              description: MemoryAvailable is the
                                                grace period for the MemoryAvailable
                                                eviction threshold.
                                              type: string
                                            nodeFSAvailable:
                                              description: NodeFSAvailable is the
                                                grace period for the NodeFSAvailable
                                                eviction threshold.
                                              type: string
                                            nodeFSInodesFree:
                                              description: NodeFSInodesFree is the
                                                grace period for the NodeFSInodesFree
                                                eviction threshold.
                                              type: string
                                          type: object
                                        failSwapOn:
                                          description: FailSwapOn makes the Kubelet
                                            fail to start if swap is enabled on the
                                            node. (default true).
                                          type: boolean
                                        featureGates:
                                          additionalProperties:
                                            type: boolean
                                          description: FeatureGates contains information
                                            about enabled feature gates.
                                          type: object
                                        imageGCHighThresholdPercent:
                                          description: 'ImageGCHighThresholdPercent
                                            describes the percent of the disk usage
                                            which triggers image garbage collection.
                                            Default: 50'
                                          format: int32
                                          type: integer
                                        imageGCLowThresholdPercent:
                                          description: 'ImageGCLowThresholdPercent
                                            describes the percent of the disk to which
                                            garbage collection attempts to free. Default:
                                            40'
                                          format: int32
                                          type: integer
                                        kubeReserved:
                                          description: 'KubeReserved is the configuration
                                            for resources reserved for kubernetes
                                            node components (mainly kubelet and container
                                            runtime). When updating these values,
                                            be aware that cgroup resizes may not succeed
                                            on active worker nodes. Look for the NodeAllocatableEnforced
                                            event to determine if the configuration
                                            was applied. Default: cpu=80m,memory=1Gi,pid=20k'
                                          properties:
                                            cpu:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: CPU is the reserved cpu.
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            ephemeralStorage:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: EphemeralStorage is the
                                                reserved ephemeral-storage.
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            memory:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Memory is the reserved
                                                memory.
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            pid:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: PID is the reserved process-ids.
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                          type: object
                                        maxPods:
                                          description: 'MaxPods is the maximum number
                                            of Pods that are allowed by the Kubelet.
                                            Default: 110'
                                          format: int32
                                          type: integer
                                        memorySwap:
                                          description: MemorySwap configures swap
                                            memory available to container workloads.
                                          properties:
                                            swapBehavior:
                                              description: 'SwapBehavior configures
                                                swap memory available to container
                                                workloads. May be one of {"LimitedSwap",
                                                "UnlimitedSwap"} defaults to: LimitedSwap'
                                              type: string
                                          type: object
                                        podPidsLimit:
                                          description: PodPIDsLimit is the maximum
                                            number of process IDs per pod allowed
                                            by the kubelet.
                                          format: int64
                                          type: integer
                                        protectKernelDefaults:
                                          description: ProtectKernelDefaults ensures
                                            that the kernel tunables are equal to
                                            the kubelet defaults. Defaults to true.
                                          type: boolean
                                        registryBurst:
                                          description: 'RegistryBurst is the maximum
                                            size of bursty pulls, temporarily allows
                                            pulls to burst to this number, while still
                                            not exceeding registryPullQPS. The value
                                            must not be a negative number. Only used
                                            if registryPullQPS is greater than 0.
                                            Default: 10'
                                          format: int32
                                          type: integer
                                        registryPullQPS:
                                          description: 'RegistryPullQPS is the limit
                                            of registry pulls per second. The value
                                            must not be a negative number. Setting
                                            it to 0 means no limit. Default: 5'
                                          format: int32
                                          type: integer
                                        seccompDefault:
                                          description: SeccompDefault enables the
                                            use of `RuntimeDefault` as the default
                                            seccomp profile for all workloads.
                                          type: boolean
                                        serializeImagePulls:
                                          description: 'SerializeImagePulls describes
                                            whether the images are pulled one at a
                                            time. Default: true'
                                          type: boolean
                                        streamingConnectionIdleTimeout:
                                          description: 'StreamingConnectionIdleTimeout
                                            is the maximum time a streaming connection
                                            can be idle before the connection is automatically
                                            closed. This field cannot be set lower
                                            than "30s" or greater than "4h". Default:
                                            "5m".'
                                          type: string
                                        systemReserved:
                                          description: |-
                                            SystemReserved is the configuration for resources reserved for system processes not managed by kubernetes (e.g. journald). When updating these values, be aware that cgroup resizes may not succeed on active worker nodes. Look for the NodeAllocatableEnforced event to determine if the configuration was applied.

                                            Deprecated: Separately configuring resource reservations for system processes is deprecated in Gardener and will be forbidden starting from Kubernetes 1.31. Please merge existing resource reservations into the kubeReserved field.
                                          properties:
                                            cpu:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: CPU is the reserved cpu.
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            ephemeralStorage:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: EphemeralStorage is the
                                                reserved ephemeral-storage.
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            memory:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Memory is the reserved
                                                memory.
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            pid:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: PID is the reserved process-ids.
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                          type: object
                                      type: object
                                    version:
                                      description: Version is the semantic Kubernetes
                                        version to use for the Kubelet in this Worker
                                        Group. If not specified the kubelet version
                                        is derived from the global shoot cluster kubernetes
                                        version. version must be equal or lower than
                                        the version of the shoot kubernetes version.
                                        Only one minor version difference to other
                                        worker groups and global kubernetes version
                                        is allowed.
                                      type: string
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Labels is a map of key/value pairs
                                    for labels for all the `Node` objects in this
                                    worker pool.
                                  type: object
                                machine:
                                  description: Machine contains information about
                                    the machine type and image.
                                  properties:
                                    architecture:
                                      description: Architecture is CPU architecture
                                        of machines in this worker pool.
                                      type: string
                                    image:
                                      description: Image holds information about the
                                        machine image to use for all nodes of this
                                        pool. It will default to the latest version
                                        of the first image stated in the referenced
                                        CloudProfile if no value has been provided.
                                      properties:
                                        name:
                                          description: Name is the name of the image.
                                          type: string
                                        providerConfig:
                                          description: ProviderConfig is the shoot's
                                            individual configuration passed to an
                                            extension resource.
                                          type: object
                                        version:
                                          description: Version is the version of the
                                            shoot's image. If version is not provided,
                                            it will be defaulted to the latest version
                                            from the CloudProfile.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type:
                                      description: Type is the machine type of the
                                        worker group.
                                      type: string
                                  required:
                                  - type
                                  type: object
                                machineControllerManager:
                                  description: MachineControllerManagerSettings contains
                                    configurations for different worker-pools. Eg.
                                    MachineDrainTimeout, MachineHealthTimeout.
                                  properties:
                                    disableHealthTimeout:
                                      description: DisableHealthTimeout if set to
                                        true, health timeout will be ignored. Leading
                                        to machine never being declared failed. This
                                        is intended to be used only for in-place updates.
                                      type: boolean
                                    inPlaceUpdateTimeout:
                                      description: MachineInPlaceUpdateTimeout is
                                        the timeout after which in-place update is
                                        declared failed.
                                      type: string
                                    machineCreationTimeout:
                                      description: MachineCreationTimeout is the period
                                        after which creation of the machine is declared
                                        failed.
                                      type: string
                                    machineDrainTimeout:
                                      description: MachineDrainTimeout is the period
                                        after which machine is forcefully deleted.
                                      type: string
                                    machineHealthTimeout:
                                      description: MachineHealthTimeout is the period
                                        after which machine is declared failed.
                                      type: string
                                    maxEvictRetries:
                                      description: MaxEvictRetries are the number
                                        of eviction retries on a pod after which drain
                                        is declared failed, and forceful deletion
                                        is triggered.
                                      format: int32
                                      type: integer
                                    nodeConditions:
                                      description: NodeConditions are the set of conditions
                                        if set to true for the period of MachineHealthTimeout,
                                        machine will be declared failed.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                maxSurge:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: MaxSurge is maximum number of machines
                                    that are created during an update. This value
                                    is divided by the number of configured zones for
                                    a fair distribution. Defaults to 0 in case of
                                    an in-place update. Defaults to 1 in case of a
                                    rolling update.
                                  x-kubernetes-int-or-string: true
                                maxUnavailable:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: MaxUnavailable is the maximum number
                                    of machines that can be unavailable during an
                                    update. This value is divided by the number of
                                    configured zones for a fair distribution. Defaults
                                    to 1 in case of an in-place update. Defaults to
                                    0 in case of a rolling update.
                                  x-kubernetes-int-or-string: true
                                maximum:
                                  description: Maximum is the maximum number of machines
                                    to create. This value is divided by the number
                                    of configured zones for a fair distribution.
                                  format: int32
                                  type: integer
                                minimum:
                                  description: Minimum is the minimum number of machines
                                    to create. This value is divided by the number
                                    of configured zones for a fair distribution.
                                  format: int32
                                  type: integer
                                name:
                                  description: Name is the name of the worker group.
                                  type: string
                                priority:
                                  description: Priority (or weight) is the importance
                                    by which this worker group will be scaled by cluster
                                    autoscaling.
                                  format: int32
                                  type: integer
                                providerConfig:
                                  description: ProviderConfig is the provider-specific
                                    configuration for this worker pool.
                                  type: object
                                sysctls:
                                  additionalProperties:
                                    type: string
                                  description: Sysctls is a map of kernel settings
                                    to apply on all machines in this worker pool.
                                  type: object
                                systemComponents:
                                  description: SystemComponents contains configuration
                                    for system components related to this worker pool
                                  properties:
                                    allow:
                                      description: Allow determines whether the pool
                                        should be allowed to host system components
                                        or not (defaults to true)
                                      type: boolean
                                  required:
                                  - allow
                                  type: object
                                taints:
                                  description: Taints is a list of taints for all
                                    the `Node` objects in this worker pool.
                                  items:
                                    description: The node this Taint is attached to
                                      has the "effect" on any pod that does not tolerate
                                      the Taint.
                                    properties:
                                      effect:
                                        description: |-
                                          Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.

                                          Possible enum values:
                                           - `"NoExecute"` Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.
                                           - `"NoSchedule"` Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.
                                           - `"PreferNoSchedule"` Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.
                                        type: string
                                      key:
                                        description: Required. The taint key to be
                                          applied to a node.
                                        type: string
                                      timeAdded:
                                        description: TimeAdded represents the time
                                          at which the taint was added. It is only
                                          written for NoExecute taints.
                                        format: date-time
                                        type: string
                                      value:
                                        description: The taint value corresponding
                                          to the taint key.
                                        type: string
                                    required:
                                    - key
                                    - effect
                                    type: object
                                  type: array
                                updateStrategy:
                                  description: UpdateStrategy specifies the machine
                                    update strategy for the worker pool.
                                  type: string
                                volume:
                                  description: Volume contains information about the
                                    volume type and size.
                                  properties:
                                    encrypted:
                                      description: Encrypted determines if the volume
                                        should be encrypted.
                                      type: boolean
                                    name:
                                      description: Name of the volume to make it referenceable.
                                      type: string
                                    size:
                                      description: VolumeSize is the size of the volume.
                                      type: string
                                    type:
                                      description: Type is the type of the volume.
                                      type: string
                                  required:
                                  - size
                                  type: object
                                zones:
                                  description: Zones is a list of availability zones
                                    that are used to evenly distribute this worker
                                    pool. Optional as not every provider may support
                                    availability zones.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - machine
                              - maximum
                              - minimum
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          workersSettings:
                            description: WorkersSettings contains settings for all
                              workers.
                            properties:
                              sshAccess:
                                description: SSHAccess contains settings regarding
                                  ssh access to the worker nodes.
                                properties:
                                  enabled:
                                    description: Enabled indicates whether the SSH
                                      access to the worker nodes is ensured to be
                                      enabled or disabled in systemd. Defaults to
                                      true.
                                    type: boolean
                                required:
                                - enabled
                                type: object
                            type: object
                        required:
                        - type
                        type: object
                      purpose:
                        description: Purpose is the purpose class for this cluster.
                        type: string
                      region:
                        description: Region is a name of a region. This field is immutable.
                        type: string
                      resources:
                        description: Resources holds a list of named resource references
                          that can be referred to in extension configs by their names.
                        items:
                          description: NamedResourceReference is a named reference
                            to a resource.
                          properties:
                            name:
                              description: Name of the resource reference.
                              type: string
                            resourceRef:
                              description: ResourceRef is a reference to a resource.
                              properties:
                                apiVersion:
                                  description: apiVersion is the API version of the
                                    referent
                                  type: string
                                kind:
                                  description: 'kind is the kind of the referent;
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'name is the name of the referent;
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                          required:
                          - name
                          - resourceRef
                          type: object
                        type: array
                      schedulerName:
                        description: SchedulerName is the name of the responsible
                          scheduler which schedules the shoot. If not specified, the
                          default scheduler takes over. This field is immutable.
                        type: string
                      secretBindingName:
                        description: SecretBindingName is the name of a SecretBinding
                          that has a reference to the provider secret. The credentials
                          inside the provider secret will be used to create the shoot
                          in the respective account. The field is mutually exclusive
                          with CredentialsBindingName. This field is immutable.
                        type: string
                      seedName:
                        description: SeedName is the name of the seed cluster that
                          runs the control plane of the Shoot.
                        type: string
                      seedSelector:
                        description: SeedSelector is an optional selector which must
                          match a seed's labels for the shoot to be scheduled on that
                          seed.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                          providerTypes:
                            description: Providers is optional and can be used by
                              restricting seeds by their provider type. '*' can be
                              used to enable seeds regardless of their provider type.
                            items:
                              type: string
                            type: array
                        type: object
                      systemComponents:
                        description: SystemComponents contains the settings of system
                          components in the control or data plane of the Shoot cluster.
                        properties:
                          coreDNS:
                            description: CoreDNS contains the settings of the Core
                              DNS components running in the data plane of the Shoot
                              cluster.
                            properties:
                              autoscaling:
                                description: Autoscaling contains the settings related
                                  to autoscaling of the Core DNS components running
                                  in the data plane of the Shoot cluster.
                                properties:
                                  mode:
                                    description: The mode of the autoscaling to be
                                      used for the Core DNS components running in
                                      the data plane of the Shoot cluster. Supported
                                      values are `horizontal` and `cluster-proportional`.
                                    type: string
                                required:
                                - mode
                                type: object
                              rewriting:
                                description: Rewriting contains the setting related
                                  to rewriting of requests, which are obviously incorrect
                                  due to the unnecessary application of the search
                                  path.
                                properties:
                                  commonSuffixes:
                                    description: CommonSuffixes are expected to be
                                      the suffix of a fully qualified domain name.
                                      Each suffix should contain at least one or two
                                      dots ('.') to prevent accidental clashes.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          nodeLocalDNS:
                            description: NodeLocalDNS contains the settings of the
                              node local DNS components running in the data plane
                              of the Shoot cluster.
                            properties:
                              disableForwardToUpstreamDNS:
                                description: DisableForwardToUpstreamDNS indicates
                                  whether requests from node local DNS to upstream
                                  DNS should be disabled. Default, if unspecified,
                                  is to forward requests for external domains to upstream
                                  DNS
                                type: boolean
                              enabled:
                                description: Enabled indicates whether node local
                                  DNS is enabled or not.
                                type: boolean
                              forceTCPToClusterDNS:
                                description: ForceTCPToClusterDNS indicates whether
                                  the connection from the node local DNS to the cluster
                                  DNS (Core DNS) will be forced to TCP or not. Default,
                                  if unspecified, is to enforce TCP.
                                type: boolean
                              forceTCPToUpstreamDNS:
                                description: ForceTCPToUpstreamDNS indicates whether
                                  the connection from the node local DNS to the upstream
                                  DNS (infrastructure DNS) will be forced to TCP or
                                  not. Default, if unspecified, is to enforce TCP.
                                type: boolean
                            required:
                            - enabled
                            type: object
                        type: object
                      tolerations:
                        description: Tolerations contains the tolerations for taints
                          on seed clusters.
                        items:
                          description: Toleration is a toleration for a seed taint.
                          properties:
                            key:
                              description: Key is the toleration key to be applied
                                to a project or shoot.
                              type: string
                            value:
                              description: Value is the toleration value corresponding
                                to the toleration key.
                              type: string
                          required:
                          - key
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - key
                        x-kubernetes-list-type: map
                    required:
                    - kubernetes
                    - provider
                    - region
                    type: object
                type: object
              template:
                description: Template describes the ManagedSeed that will be created
                  if insufficient replicas are detected. Each ManagedSeed created
                  / updated by the ManagedSeedSet will fulfill this template.
                properties:
                  metadata:
                    description: Standard object metadata.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  spec:
                    description: Specification of the desired behavior of the ManagedSeed.
                    properties:
                      gardenlet:
                        description: Gardenlet specifies that the ManagedSeed controller
                          should deploy a gardenlet into the cluster with the given
                          deployment parameters and GardenletConfiguration.
                        properties:
                          bootstrap:
                            description: Bootstrap is the mechanism that should be
                              used for bootstrapping gardenlet connection to the Garden
                              cluster. One of ServiceAccount, BootstrapToken, None.
                              If set to ServiceAccount or BootstrapToken, a service
                              account or a bootstrap token will be created in the
                              garden cluster and used to compute the bootstrap kubeconfig.
                              If set to None, the gardenClientConnection.kubeconfig
                              field will be used to connect to the Garden cluster.
                              Defaults to BootstrapToken. This field is immutable.
                            type: string
                          config:
                            description: Config is the GardenletConfiguration used
                              to configure gardenlet.
                            type: object
                          deployment:
                            description: Deployment specifies certain gardenlet deployment
                              parameters, such as the number of replicas, the image,
                              etc.
                            properties:
                              additionalVolumeMounts:
                                description: AdditionalVolumeMounts is the list of
                                  additional pod volumes to mount into the gardenlet
                                  container's filesystem.
                                items:
                                  description: VolumeMount describes a mounting of
                                    a Volume within a container.
                                  properties:
                                    mountPath:
                                      description: Path within the container at which
                                        the volume should be mounted.  Must not contain
                                        ':'.
                                      type: string
                                    mountPropagation:
                                      description: |-
                                        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10. When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified (which defaults to None).

                                        Possible enum values:
                                         - `"Bidirectional"` means that the volume in a container will receive new mounts from the host or other containers, and its own mounts will be propagated from the container to the host or other containers. Note that this mode is recursively applied to all mounts in the volume ("rshared" in Linux terminology).
                                         - `"HostToContainer"` means that the volume in a container will receive new mounts from the host or other containers, but filesystems mounted inside the container won't be propagated to the host or other containers. Note that this mode is recursively applied to all mounts in the volume ("rslave" in Linux terminology).
                                         - `"None"` means that the volume in a container will not receive new mounts from the host or other containers, and filesystems mounted inside the container won't be propagated to the host or other containers. Note that this mode corresponds to "private" in Linux terminology.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description: Mounted read-only if true, read-write
                                        otherwise (false or unspecified). Defaults
                                        to false.
                                      type: boolean
                                    recursiveReadOnly:
                                      description: |-
                                        RecursiveReadOnly specifies whether read-only mounts should be handled recursively.

                                        If ReadOnly is false, this field has no meaning and must be unspecified.

                                        If ReadOnly is true, and this field is set to Disabled, the mount is not made recursively read-only.  If this field is set to IfPossible, the mount is made recursively read-only, if it is supported by the container runtime.  If this field is set to Enabled, the mount is made recursively read-only if it is supported by the container runtime, otherwise the pod will not be started and an error will be generated to indicate the reason.

                                        If this field is set to IfPossible or Enabled, MountPropagation must be set to None (or be unspecified, which defaults to None).

                                        If this field is not specified, it is treated as an equivalent of Disabled.
                                      type: string
                                    subPath:
                                      description: Path within the volume from which
                                        the container's volume should be mounted.
                                        Defaults to "" (volume's root).
                                      type: string
                                    subPathExpr:
                                      description: Expanded path within the volume
                                        from which the container's volume should be
                                        mounted. Behaves similarly to SubPath but
                                        environment variable references $(VAR_NAME)
                                        are expanded using the container's environment.
                                        Defaults to "" (volume's root). SubPathExpr
                                        and SubPath are mutually exclusive.
                                      type: string
                                  required:
                                  - name
                                  - mountPath
                                  type: object
                                type: array
                              additionalVolumes:
                                description: AdditionalVolumes is the list of additional
                                  volumes that should be mounted by gardenlet containers.
                                items:
                                  description: Volume represents a named volume in
                                    a pod that may be accessed by any container in
                                    the pod.
                                  properties:
                                    awsElasticBlockStore:
                                      description: 'awsElasticBlockStore represents
                                        an AWS Disk resource that is attached to a
                                        kubelet''s host machine and then exposed to
                                        the pod. Deprecated: AWSElasticBlockStore
                                        is deprecated. All operations for the in-tree
                                        awsElasticBlockStore type are redirected to
                                        the ebs.csi.aws.com CSI driver. More info:
                                        https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      properties:
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: string
                                        partition:
                                          description: 'partition is the partition
                                            in the volume that you want to mount.
                                            If omitted, the default is to mount by
                                            volume name. Examples: For volume /dev/sda1,
                                            you specify the partition as "1". Similarly,
                                            the volume partition for /dev/sda is "0"
                                            (or you can leave the property empty).'
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: 'readOnly value true will force
                                            the readOnly setting in VolumeMounts.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: boolean
                                        volumeID:
                                          description: 'volumeID is unique ID of the
                                            persistent disk resource in AWS (Amazon
                                            EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    azureDisk:
                                      description: 'azureDisk represents an Azure
                                        Data Disk mount on the host and bind mount
                                        to the pod. Deprecated: AzureDisk is deprecated.
                                        All operations for the in-tree azureDisk type
                                        are redirected to the disk.csi.azure.com CSI
                                        driver.'
                                      properties:
                                        cachingMode:
                                          description: |-
                                            cachingMode is the Host Caching mode: None, Read Only, Read Write.

                                            Possible enum values:
                                             - `"None"`
                                             - `"ReadOnly"`
                                             - `"ReadWrite"`
                                          type: string
                                        diskName:
                                          description: diskName is the Name of the
                                            data disk in the blob storage
                                          type: string
                                        diskURI:
                                          description: diskURI is the URI of data
                                            disk in the blob storage
                                          type: string
                                        fsType:
                                          description: fsType is Filesystem type to
                                            mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        kind:
                                          description: |-
                                            kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared

                                            Possible enum values:
                                             - `"Dedicated"`
                                             - `"Managed"`
                                             - `"Shared"`
                                          type: string
                                        readOnly:
                                          description: readOnly Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                      required:
                                      - diskName
                                      - diskURI
                                      type: object
                                    azureFile:
                                      description: 'azureFile represents an Azure
                                        File Service mount on the host and bind mount
                                        to the pod. Deprecated: AzureFile is deprecated.
                                        All operations for the in-tree azureFile type
                                        are redirected to the file.csi.azure.com CSI
                                        driver.'
                                      properties:
                                        readOnly:
                                          description: readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretName:
                                          description: secretName is the  name of
                                            secret that contains Azure Storage Account
                                            Name and Key
                                          type: string
                                        shareName:
                                          description: shareName is the azure share
                                            Name
                                          type: string
                                      required:
                                      - secretName
                                      - shareName
                                      type: object
                                    cephfs:
                                      description: 'cephFS represents a Ceph FS mount
                                        on the host that shares a pod''s lifetime.
                                        Deprecated: CephFS is deprecated and the in-tree
                                        cephfs type is no longer supported.'
                                      properties:
                                        monitors:
                                          description: 'monitors is Required: Monitors
                                            is a collection of Ceph monitors More
                                            info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: 'path is Optional: Used as
                                            the mounted root, rather than the full
                                            Ceph tree, default is /'
                                          type: string
                                        readOnly:
                                          description: 'readOnly is Optional: Defaults
                                            to false (read/write). ReadOnly here will
                                            force the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: boolean
                                        secretFile:
                                          description: 'secretFile is Optional: SecretFile
                                            is the path to key ring for User, default
                                            is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                        secretRef:
                                          description: 'secretRef is Optional: SecretRef
                                            is reference to the authentication secret
                                            for User, default is empty. More info:
                                            https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                This field is effectively required,
                                                but due to backwards compatibility
                                                is allowed to be empty. Instances
                                                of this type with an empty value here
                                                are almost certainly wrong. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                          type: object
                                        user:
                                          description: 'user is optional: User is
                                            the rados user name, default is admin
                                            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                          type: string
                                      required:
                                      - monitors
                                      type: object
                                    cinder:
                                      description: 'cinder represents a cinder volume
                                        attached and mounted on kubelets host machine.
                                        Deprecated: Cinder is deprecated. All operations
                                        for the in-tree cinder type are redirected
                                        to the cinder.csi.openstack.org CSI driver.
                                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      properties:
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Examples:
                                            "ext4", "xfs", "ntfs". Implicitly inferred
                                            to be "ext4" if unspecified. More info:
                                            https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                        readOnly:
                                          description: 'readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: boolean
                                        secretRef:
                                          description: 'secretRef is optional: points
                                            to a secret object containing parameters
                                            used to connect to OpenStack.'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                This field is effectively required,
                                                but due to backwards compatibility
                                                is allowed to be empty. Instances
                                                of this type with an empty value here
                                                are almost certainly wrong. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                          type: object
                                        volumeID:
                                          description: 'volumeID used to identify
                                            the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    configMap:
                                      description: configMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items if unspecified, each
                                            key-value pair in the Data field of the
                                            referenced ConfigMap will be projected
                                            into the volume as a file whose name is
                                            the key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the ConfigMap,
                                            the volume setup will error unless it
                                            is marked optional. Paths must be relative
                                            and may not contain the '..' path or start
                                            with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        name:
                                          description: 'Name of the referent. This
                                            field is effectively required, but due
                                            to backwards compatibility is allowed
                                            to be empty. Instances of this type with
                                            an empty value here are almost certainly
                                            wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                    csi:
                                      description: csi (Container Storage Interface)
                                        represents ephemeral storage that is handled
                                        by certain external CSI drivers.
                                      properties:
                                        driver:
                                          description: driver is the name of the CSI
                                            driver that handles this volume. Consult
                                            with your admin for the correct name as
                                            registered in the cluster.
                                          type: string
                                        fsType:
                                          description: fsType to mount. Ex. "ext4",
                                            "xfs", "ntfs". If not provided, the empty
                                            value is passed to the associated CSI
                                            driver which will determine the default
                                            filesystem to apply.
                                          type: string
                                        nodePublishSecretRef:
                                          description: nodePublishSecretRef is a reference
                                            to the secret object containing sensitive
                                            information to pass to the CSI driver
                                            to complete the CSI NodePublishVolume
                                            and NodeUnpublishVolume calls. This field
                                            is optional, and  may be empty if no secret
                                            is required. If the secret object contains
                                            more than one secret, all secret references
                                            are passed.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                This field is effectively required,
                                                but due to backwards compatibility
                                                is allowed to be empty. Instances
                                                of this type with an empty value here
                                                are almost certainly wrong. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                          type: object
                                        readOnly:
                                          description: readOnly specifies a read-only
                                            configuration for the volume. Defaults
                                            to false (read/write).
                                          type: boolean
                                        volumeAttributes:
                                          additionalProperties:
                                            type: string
                                          description: volumeAttributes stores driver-specific
                                            properties that are passed to the CSI
                                            driver. Consult your driver's documentation
                                            for supported values.
                                          type: object
                                      required:
                                      - driver
                                      type: object
                                    downwardAPI:
                                      description: downwardAPI represents downward
                                        API about the pod that should populate this
                                        volume
                                      properties:
                                        defaultMode:
                                          description: 'Optional: mode bits to use
                                            on created files by default. Must be a
                                            Optional: mode bits used to set permissions
                                            on created files by default. Must be an
                                            octal value between 0000 and 0777 or a
                                            decimal value between 0 and 511. YAML
                                            accepts both octal and decimal values,
                                            JSON requires decimal values for mode
                                            bits. Defaults to 0644. Directories within
                                            the path are not affected by this setting.
                                            This might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits
                                            set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: Items is a list of downward
                                            API volume file
                                          items:
                                            description: DownwardAPIVolumeFile represents
                                              information to create the file containing
                                              the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a
                                                  field of the pod: only annotations,
                                                  labels, name, namespace and uid
                                                  are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in
                                                      terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field
                                                      to select in the specified API
                                                      version.
                                                    type: string
                                                required:
                                                - fieldPath
                                                type: object
                                              mode:
                                                description: 'Optional: mode bits
                                                  used to set permissions on this
                                                  file, must be an octal value between
                                                  0000 and 0777 or a decimal value
                                                  between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the
                                                  relative path name of the file to
                                                  be created. Must not be absolute
                                                  or contain the ''..'' path. Must
                                                  be utf-8 encoded. The first item
                                                  of the relative path must not start
                                                  with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of
                                                  the container: only resources limits
                                                  and requests (limits.cpu, limits.memory,
                                                  requests.cpu and requests.memory)
                                                  are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name:
                                                      required for volumes, optional
                                                      for env vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                      to select'
                                                    type: string
                                                required:
                                                - resource
                                                type: object
                                            required:
                                            - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    emptyDir:
                                      description: 'emptyDir represents a temporary
                                        directory that shares a pod''s lifetime. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      properties:
                                        medium:
                                          description: 'medium represents what type
                                            of storage medium should back this directory.
                                            The default is "" which means to use the
                                            node''s default medium. Must be an empty
                                            string (default) or Memory. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                          type: string
                                        sizeLimit:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: 'sizeLimit is the total amount
                                            of local storage required for this EmptyDir
                                            volume. The size limit is also applicable
                                            for memory medium. The maximum usage on
                                            memory medium EmptyDir would be the minimum
                                            value between the SizeLimit specified
                                            here and the sum of memory limits of all
                                            containers in a pod. The default is nil
                                            which means that the limit is undefined.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      type: object
                                    ephemeral:
                                      description: |-
                                        ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.

                                        Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity
                                           tracking are needed,
                                        c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through
                                           a PersistentVolumeClaim (see EphemeralVolumeSource for more
                                           information on the connection between this volume type
                                           and PersistentVolumeClaim).

                                        Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.

                                        Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.

                                        A pod can use both types of ephemeral volumes and persistent volumes at the same time.
                                      properties:
                                        volumeClaimTemplate:
                                          description: |-
                                            Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).

                                            An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.

                                            This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.

                                            Required, must not be nil.
                                          properties:
                                            metadata:
                                              description: May contain labels and
                                                annotations that will be copied into
                                                the PVC when creating it. No other
                                                fields are allowed and will be rejected
                                                during validation.
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            spec:
                                              description: The specification for the
                                                PersistentVolumeClaim. The entire
                                                content is copied unchanged into the
                                                PVC that gets created from this template.
                                                The same fields as in a PersistentVolumeClaim
                                                are also valid here.
                                              properties:
                                                accessModes:
                                                  description: 'accessModes contains
                                                    the desired access modes the volume
                                                    should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                dataSource:
                                                  description: 'dataSource field can
                                                    be used to specify either: * An
                                                    existing VolumeSnapshot object
                                                    (snapshot.storage.k8s.io/VolumeSnapshot)
                                                    * An existing PVC (PersistentVolumeClaim)
                                                    If the provisioner or an external
                                                    controller can support the specified
                                                    data source, it will create a
                                                    new volume based on the contents
                                                    of the specified data source.
                                                    When the AnyVolumeDataSource feature
                                                    gate is enabled, dataSource contents
                                                    will be copied to dataSourceRef,
                                                    and dataSourceRef contents will
                                                    be copied to dataSource when dataSourceRef.namespace
                                                    is not specified. If the namespace
                                                    is specified, then dataSourceRef
                                                    will not be copied to dataSource.'
                                                  properties:
                                                    apiGroup:
                                                      description: APIGroup is the
                                                        group for the resource being
                                                        referenced. If APIGroup is
                                                        not specified, the specified
                                                        Kind must be in the core API
                                                        group. For any other third-party
                                                        types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                dataSourceRef:
                                                  description: |-
                                                    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef
                                                      allows any non-core object, as well as PersistentVolumeClaim objects.
                                                    * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                                      preserves all values, and generates an error if a disallowed value is
                                                      specified.
                                                    * While dataSource only allows local objects, dataSourceRef allows objects
                                                      in any namespaces.
                                                    (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                  properties:
                                                    apiGroup:
                                                      description: APIGroup is the
                                                        group for the resource being
                                                        referenced. If APIGroup is
                                                        not specified, the specified
                                                        Kind must be in the core API
                                                        group. For any other third-party
                                                        types, APIGroup is required.
                                                      type: string
                                                    kind:
                                                      description: Kind is the type
                                                        of resource being referenced
                                                      type: string
                                                    name:
                                                      description: Name is the name
                                                        of resource being referenced
                                                      type: string
                                                    namespace:
                                                      description: Namespace is the
                                                        namespace of resource being
                                                        referenced Note that when
                                                        a namespace is specified,
                                                        a gateway.networking.k8s.io/ReferenceGrant
                                                        object is required in the
                                                        referent namespace to allow
                                                        that namespace's owner to
                                                        accept the reference. See
                                                        the ReferenceGrant documentation
                                                        for details. (Alpha) This
                                                        field requires the CrossNamespaceVolumeDataSource
                                                        feature gate to be enabled.
                                                      type: string
                                                  required:
                                                  - kind
                                                  - name
                                                  type: object
                                                resources:
                                                  description: 'resources represents
                                                    the minimum resources the volume
                                                    should have. If RecoverVolumeExpansionFailure
                                                    feature is enabled users are allowed
                                                    to specify resource requirements
                                                    that are lower than previous value
                                                    but must still be higher than
                                                    capacity recorded in the status
                                                    field of the claim. More info:
                                                    https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                  properties:
                                                    limits:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Limits describes
                                                        the maximum amount of compute
                                                        resources allowed. More info:
                                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                      type: object
                                                    requests:
                                                      additionalProperties:
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        x-kubernetes-int-or-string: true
                                                      description: 'Requests describes
                                                        the minimum amount of compute
                                                        resources required. If Requests
                                                        is omitted for a container,
                                                        it defaults to Limits if that
                                                        is explicitly specified, otherwise
                                                        to an implementation-defined
                                                        value. Requests cannot exceed
                                                        Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                      type: object
                                                  type: object
                                                selector:
                                                  description: selector is a label
                                                    query over volumes to consider
                                                    for binding.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                storageClassName:
                                                  description: 'storageClassName is
                                                    the name of the StorageClass required
                                                    by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                  type: string
                                                volumeAttributesClassName:
                                                  description: 'volumeAttributesClassName
                                                    may be used to set the VolumeAttributesClass
                                                    used by this claim. If specified,
                                                    the CSI driver will create or
                                                    update the volume with the attributes
                                                    defined in the corresponding VolumeAttributesClass.
                                                    This has a different purpose than
                                                    storageClassName, it can be changed
                                                    after the claim is created. An
                                                    empty string value means that
                                                    no VolumeAttributesClass will
                                                    be applied to the claim but it''s
                                                    not allowed to reset this field
                                                    to empty string once it is set.
                                                    If unspecified and the PersistentVolumeClaim
                                                    is unbound, the default VolumeAttributesClass
                                                    will be set by the persistentvolume
                                                    controller if it exists. If the
                                                    resource referred to by volumeAttributesClass
                                                    does not exist, this PersistentVolumeClaim
                                                    will be set to a Pending state,
                                                    as reflected by the modifyVolumeStatus
                                                    field, until such as a resource
                                                    exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                                    (Beta) Using this field requires
                                                    the VolumeAttributesClass feature
                                                    gate to be enabled (off by default).'
                                                  type: string
                                                volumeMode:
                                                  description: |-
                                                    volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.

                                                    Possible enum values:
                                                     - `"Block"` means the volume will not be formatted with a filesystem and will remain a raw block device.
                                                     - `"Filesystem"` means the volume will be or is formatted with a filesystem.
                                                  type: string
                                                volumeName:
                                                  description: volumeName is the binding
                                                    reference to the PersistentVolume
                                                    backing this claim.
                                                  type: string
                                              type: object
                                          required:
                                          - spec
                                          type: object
                                      type: object
                                    fc:
                                      description: fc represents a Fibre Channel resource
                                        that is attached to a kubelet's host machine
                                        and then exposed to the pod.
                                      properties:
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        lun:
                                          description: 'lun is Optional: FC target
                                            lun number'
                                          format: int32
                                          type: integer
                                        readOnly:
                                          description: 'readOnly is Optional: Defaults
                                            to false (read/write). ReadOnly here will
                                            force the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        targetWWNs:
                                          description: 'targetWWNs is Optional: FC
                                            target worldwide names (WWNs)'
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        wwids:
                                          description: 'wwids Optional: FC volume
                                            world wide identifiers (wwids) Either
                                            wwids or combination of targetWWNs and
                                            lun must be set, but not both simultaneously.'
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    flexVolume:
                                      description: 'flexVolume represents a generic
                                        volume resource that is provisioned/attached
                                        using an exec based plugin. Deprecated: FlexVolume
                                        is deprecated. Consider using a CSIDriver
                                        instead.'
                                      properties:
                                        driver:
                                          description: driver is the name of the driver
                                            to use for this volume.
                                          type: string
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". The default filesystem
                                            depends on FlexVolume script.
                                          type: string
                                        options:
                                          additionalProperties:
                                            type: string
                                          description: 'options is Optional: this
                                            field holds extra command options if any.'
                                          type: object
                                        readOnly:
                                          description: 'readOnly is Optional: defaults
                                            to false (read/write). ReadOnly here will
                                            force the ReadOnly setting in VolumeMounts.'
                                          type: boolean
                                        secretRef:
                                          description: 'secretRef is Optional: secretRef
                                            is reference to the secret object containing
                                            sensitive information to pass to the plugin
                                            scripts. This may be empty if no secret
                                            object is specified. If the secret object
                                            contains more than one secret, all secrets
                                            are passed to the plugin scripts.'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                This field is effectively required,
                                                but due to backwards compatibility
                                                is allowed to be empty. Instances
                                                of this type with an empty value here
                                                are almost certainly wrong. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                          type: object
                                      required:
                                      - driver
                                      type: object
                                    flocker:
                                      description: 'flocker represents a Flocker volume
                                        attached to a kubelet''s host machine. This
                                        depends on the Flocker control service being
                                        running. Deprecated: Flocker is deprecated
                                        and the in-tree flocker type is no longer
                                        supported.'
                                      properties:
                                        datasetName:
                                          description: datasetName is Name of the
                                            dataset stored as metadata -> name on
                                            the dataset for Flocker should be considered
                                            as deprecated
                                          type: string
                                        datasetUUID:
                                          description: datasetUUID is the UUID of
                                            the dataset. This is unique identifier
                                            of a Flocker dataset
                                          type: string
                                      type: object
                                    gcePersistentDisk:
                                      description: 'gcePersistentDisk represents a
                                        GCE Disk resource that is attached to a kubelet''s
                                        host machine and then exposed to the pod.
                                        Deprecated: GCEPersistentDisk is deprecated.
                                        All operations for the in-tree gcePersistentDisk
                                        type are redirected to the pd.csi.storage.gke.io
                                        CSI driver. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      properties:
                                        fsType:
                                          description: 'fsType is filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: string
                                        partition:
                                          description: 'partition is the partition
                                            in the volume that you want to mount.
                                            If omitted, the default is to mount by
                                            volume name. Examples: For volume /dev/sda1,
                                            you specify the partition as "1". Similarly,
                                            the volume partition for /dev/sda is "0"
                                            (or you can leave the property empty).
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          format: int32
                                          type: integer
                                        pdName:
                                          description: 'pdName is unique name of the
                                            PD resource in GCE. Used to identify the
                                            disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                          type: boolean
                                      required:
                                      - pdName
                                      type: object
                                    gitRepo:
                                      description: 'gitRepo represents a git repository
                                        at a particular revision. Deprecated: GitRepo
                                        is deprecated. To provision a container with
                                        a git repo, mount an EmptyDir into an InitContainer
                                        that clones the repo using git, then mount
                                        the EmptyDir into the Pod''s container.'
                                      properties:
                                        directory:
                                          description: directory is the target directory
                                            name. Must not contain or start with '..'.  If
                                            '.' is supplied, the volume directory
                                            will be the git repository.  Otherwise,
                                            if specified, the volume will contain
                                            the git repository in the subdirectory
                                            with the given name.
                                          type: string
                                        repository:
                                          description: repository is the URL
                                          type: string
                                        revision:
                                          description: revision is the commit hash
                                            for the specified revision.
                                          type: string
                                      required:
                                      - repository
                                      type: object
                                    glusterfs:
                                      description: 'glusterfs represents a Glusterfs
                                        mount on the host that shares a pod''s lifetime.
                                        Deprecated: Glusterfs is deprecated and the
                                        in-tree glusterfs type is no longer supported.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                      properties:
                                        endpoints:
                                          description: 'endpoints is the endpoint
                                            name that details Glusterfs topology.
                                            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        path:
                                          description: 'path is the Glusterfs volume
                                            path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            Glusterfs volume to be mounted with read-only
                                            permissions. Defaults to false. More info:
                                            https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                          type: boolean
                                      required:
                                      - endpoints
                                      - path
                                      type: object
                                    hostPath:
                                      description: 'hostPath represents a pre-existing
                                        file or directory on the host machine that
                                        is directly exposed to the container. This
                                        is generally used for system agents or other
                                        privileged things that are allowed to see
                                        the host machine. Most containers will NOT
                                        need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                      properties:
                                        path:
                                          description: 'path of the directory on the
                                            host. If the path is a symlink, it will
                                            follow the link to the real path. More
                                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                          type: string
                                        type:
                                          description: |-
                                            type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath

                                            Possible enum values:
                                             - `""` For backwards compatible, leave it empty if unset
                                             - `"BlockDevice"` A block device must exist at the given path
                                             - `"CharDevice"` A character device must exist at the given path
                                             - `"Directory"` A directory must exist at the given path
                                             - `"DirectoryOrCreate"` If nothing exists at the given path, an empty directory will be created there as needed with file mode 0755, having the same group and ownership with Kubelet.
                                             - `"File"` A file must exist at the given path
                                             - `"FileOrCreate"` If nothing exists at the given path, an empty file will be created there as needed with file mode 0644, having the same group and ownership with Kubelet.
                                             - `"Socket"` A UNIX socket must exist at the given path
                                          type: string
                                      required:
                                      - path
                                      type: object
                                    image:
                                      description: |-
                                        image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine. The volume is resolved at pod startup depending on which PullPolicy value is provided:

                                        - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails. - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present. - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.

                                        The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation. A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message. The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field. The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images. The volume will be mounted read-only (ro) and non-executable files (noexec). Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath). The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
                                      properties:
                                        pullPolicy:
                                          description: |-
                                            Policy for pulling OCI objects. Possible values are: Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails. Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present. IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.

                                            Possible enum values:
                                             - `"Always"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.
                                             - `"IfNotPresent"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.
                                             - `"Never"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present
                                          type: string
                                        reference:
                                          description: 'Required: Image or artifact
                                            reference to be used. Behaves in the same
                                            way as pod.spec.containers[*].image. Pull
                                            secrets will be assembled in the same
                                            way as for the container image by looking
                                            up node credentials, SA image pull secrets,
                                            and pod spec image pull secrets. More
                                            info: https://kubernetes.io/docs/concepts/containers/images
                                            This field is optional to allow higher
                                            level config management to default or
                                            override container images in workload
                                            controllers like Deployments and StatefulSets.'
                                          type: string
                                      type: object
                                    iscsi:
                                      description: 'iscsi represents an ISCSI Disk
                                        resource that is attached to a kubelet''s
                                        host machine and then exposed to the pod.
                                        More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                      properties:
                                        chapAuthDiscovery:
                                          description: chapAuthDiscovery defines whether
                                            support iSCSI Discovery CHAP authentication
                                          type: boolean
                                        chapAuthSession:
                                          description: chapAuthSession defines whether
                                            support iSCSI Session CHAP authentication
                                          type: boolean
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi'
                                          type: string
                                        initiatorName:
                                          description: initiatorName is the custom
                                            iSCSI Initiator Name. If initiatorName
                                            is specified with iscsiInterface simultaneously,
                                            new iSCSI interface <target portal>:<volume
                                            name> will be created for the connection.
                                          type: string
                                        iqn:
                                          description: iqn is the target iSCSI Qualified
                                            Name.
                                          type: string
                                        iscsiInterface:
                                          description: iscsiInterface is the interface
                                            Name that uses an iSCSI transport. Defaults
                                            to 'default' (tcp).
                                          type: string
                                        lun:
                                          description: lun represents iSCSI Target
                                            Lun number.
                                          format: int32
                                          type: integer
                                        portals:
                                          description: portals is the iSCSI Target
                                            Portal List. The portal is either an IP
                                            or ip_addr:port if the port is other than
                                            default (typically TCP ports 860 and 3260).
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        readOnly:
                                          description: readOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false.
                                          type: boolean
                                        secretRef:
                                          description: secretRef is the CHAP Secret
                                            for iSCSI target and initiator authentication
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                This field is effectively required,
                                                but due to backwards compatibility
                                                is allowed to be empty. Instances
                                                of this type with an empty value here
                                                are almost certainly wrong. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                          type: object
                                        targetPortal:
                                          description: targetPortal is iSCSI Target
                                            Portal. The Portal is either an IP or
                                            ip_addr:port if the port is other than
                                            default (typically TCP ports 860 and 3260).
                                          type: string
                                      required:
                                      - targetPortal
                                      - iqn
                                      - lun
                                      type: object
                                    name:
                                      description: 'name of the volume. Must be a
                                        DNS_LABEL and unique within the pod. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    nfs:
                                      description: 'nfs represents an NFS mount on
                                        the host that shares a pod''s lifetime More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      properties:
                                        path:
                                          description: 'path that is exported by the
                                            NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            NFS export to be mounted with read-only
                                            permissions. Defaults to false. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: boolean
                                        server:
                                          description: 'server is the hostname or
                                            IP address of the NFS server. More info:
                                            https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                          type: string
                                      required:
                                      - server
                                      - path
                                      type: object
                                    persistentVolumeClaim:
                                      description: 'persistentVolumeClaimVolumeSource
                                        represents a reference to a PersistentVolumeClaim
                                        in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                      properties:
                                        claimName:
                                          description: 'claimName is the name of a
                                            PersistentVolumeClaim in the same namespace
                                            as the pod using this volume. More info:
                                            https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                          type: string
                                        readOnly:
                                          description: readOnly Will force the ReadOnly
                                            setting in VolumeMounts. Default false.
                                          type: boolean
                                      required:
                                      - claimName
                                      type: object
                                    photonPersistentDisk:
                                      description: 'photonPersistentDisk represents
                                        a PhotonController persistent disk attached
                                        and mounted on kubelets host machine. Deprecated:
                                        PhotonPersistentDisk is deprecated and the
                                        in-tree photonPersistentDisk type is no longer
                                        supported.'
                                      properties:
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        pdID:
                                          description: pdID is the ID that identifies
                                            Photon Controller persistent disk
                                          type: string
                                      required:
                                      - pdID
                                      type: object
                                    portworxVolume:
                                      description: 'portworxVolume represents a portworx
                                        volume attached and mounted on kubelets host
                                        machine. Deprecated: PortworxVolume is deprecated.
                                        All operations for the in-tree portworxVolume
                                        type are redirected to the pxd.portworx.com
                                        CSI driver when the CSIMigrationPortworx feature-gate
                                        is on.'
                                      properties:
                                        fsType:
                                          description: fSType represents the filesystem
                                            type to mount Must be a filesystem type
                                            supported by the host operating system.
                                            Ex. "ext4", "xfs". Implicitly inferred
                                            to be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        volumeID:
                                          description: volumeID uniquely identifies
                                            a Portworx volume
                                          type: string
                                      required:
                                      - volumeID
                                      type: object
                                    projected:
                                      description: projected items for all in one
                                        resources secrets, configmaps, and downward
                                        API
                                      properties:
                                        defaultMode:
                                          description: defaultMode are the mode bits
                                            used to set permissions on created files
                                            by default. Must be an octal value between
                                            0000 and 0777 or a decimal value between
                                            0 and 511. YAML accepts both octal and
                                            decimal values, JSON requires decimal
                                            values for mode bits. Directories within
                                            the path are not affected by this setting.
                                            This might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits
                                            set.
                                          format: int32
                                          type: integer
                                        sources:
                                          description: sources is the list of volume
                                            projections. Each entry in this list handles
                                            one source.
                                          items:
                                            description: Projection that may be projected
                                              along with other supported volume types.
                                              Exactly one of these fields must be
                                              set.
                                            properties:
                                              clusterTrustBundle:
                                                description: |-
                                                  ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle objects in an auto-updating file.

                                                  Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                                  ClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.

                                                  Kubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.
                                                properties:
                                                  labelSelector:
                                                    description: Select all ClusterTrustBundles
                                                      that match this label selector.  Only
                                                      has effect if signerName is
                                                      set.  Mutually-exclusive with
                                                      name.  If unset, interpreted
                                                      as "match nothing".  If set
                                                      but empty, interpreted as "match
                                                      everything".
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  name:
                                                    description: Select a single ClusterTrustBundle
                                                      by object name.  Mutually-exclusive
                                                      with signerName and labelSelector.
                                                    type: string
                                                  optional:
                                                    description: If true, don't block
                                                      pod startup if the referenced
                                                      ClusterTrustBundle(s) aren't
                                                      available.  If using name, then
                                                      the named ClusterTrustBundle
                                                      is allowed not to exist.  If
                                                      using signerName, then the combination
                                                      of signerName and labelSelector
                                                      is allowed to match zero ClusterTrustBundles.
                                                    type: boolean
                                                  path:
                                                    description: Relative path from
                                                      the volume root to write the
                                                      bundle.
                                                    type: string
                                                  signerName:
                                                    description: Select all ClusterTrustBundles
                                                      that match this signer name.
                                                      Mutually-exclusive with name.  The
                                                      contents of all selected ClusterTrustBundles
                                                      will be unified and deduplicated.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                              configMap:
                                                description: configMap information
                                                  about the configMap data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced ConfigMap
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the ConfigMap, the volume
                                                      setup will error unless it is
                                                      marked optional. Paths must
                                                      be relative and may not contain
                                                      the '..' path or start with
                                                      '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  name:
                                                    description: 'Name of the referent.
                                                      This field is effectively required,
                                                      but due to backwards compatibility
                                                      is allowed to be empty. Instances
                                                      of this type with an empty value
                                                      here are almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: optional specify
                                                      whether the ConfigMap or its
                                                      keys must be defined
                                                    type: boolean
                                                type: object
                                              downwardAPI:
                                                description: downwardAPI information
                                                  about the downwardAPI data to project
                                                properties:
                                                  items:
                                                    description: Items is a list of
                                                      DownwardAPIVolume file
                                                    items:
                                                      description: DownwardAPIVolumeFile
                                                        represents information to
                                                        create the file containing
                                                        the pod field
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required:
                                                            Selects a field of the
                                                            pod: only annotations,
                                                            labels, name, namespace
                                                            and uid are supported.'
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                          required:
                                                          - fieldPath
                                                          type: object
                                                        mode:
                                                          description: 'Optional:
                                                            mode bits used to set
                                                            permissions on this file,
                                                            must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: 'Required:
                                                            Path is  the relative
                                                            path name of the file
                                                            to be created. Must not
                                                            be absolute or contain
                                                            the ''..'' path. Must
                                                            be utf-8 encoded. The
                                                            first item of the relative
                                                            path must not start with
                                                            ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a
                                                            resource of the container:
                                                            only resources limits
                                                            and requests (limits.cpu,
                                                            limits.memory, requests.cpu
                                                            and requests.memory) are
                                                            currently supported.'
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                          required:
                                                          - resource
                                                          type: object
                                                      required:
                                                      - path
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              secret:
                                                description: secret information about
                                                  the secret data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced Secret
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the Secret, the volume setup
                                                      will error unless it is marked
                                                      optional. Paths must be relative
                                                      and may not contain the '..'
                                                      path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  name:
                                                    description: 'Name of the referent.
                                                      This field is effectively required,
                                                      but due to backwards compatibility
                                                      is allowed to be empty. Instances
                                                      of this type with an empty value
                                                      here are almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                    type: string
                                                  optional:
                                                    description: optional field specify
                                                      whether the Secret or its key
                                                      must be defined
                                                    type: boolean
                                                type: object
                                              serviceAccountToken:
                                                description: serviceAccountToken is
                                                  information about the serviceAccountToken
                                                  data to project
                                                properties:
                                                  audience:
                                                    description: audience is the intended
                                                      audience of the token. A recipient
                                                      of a token must identify itself
                                                      with an identifier specified
                                                      in the audience of the token,
                                                      and otherwise should reject
                                                      the token. The audience defaults
                                                      to the identifier of the apiserver.
                                                    type: string
                                                  expirationSeconds:
                                                    description: expirationSeconds
                                                      is the requested duration of
                                                      validity of the service account
                                                      token. As the token approaches
                                                      expiration, the kubelet volume
                                                      plugin will proactively rotate
                                                      the service account token. The
                                                      kubelet will start trying to
                                                      rotate the token if the token
                                                      is older than 80 percent of
                                                      its time to live or if the token
                                                      is older than 24 hours.Defaults
                                                      to 1 hour and must be at least
                                                      10 minutes.
                                                    format: int64
                                                    type: integer
                                                  path:
                                                    description: path is the path
                                                      relative to the mount point
                                                      of the file to project the token
                                                      into.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    quobyte:
                                      description: 'quobyte represents a Quobyte mount
                                        on the host that shares a pod''s lifetime.
                                        Deprecated: Quobyte is deprecated and the
                                        in-tree quobyte type is no longer supported.'
                                      properties:
                                        group:
                                          description: group to map volume access
                                            to Default is no group
                                          type: string
                                        readOnly:
                                          description: readOnly here will force the
                                            Quobyte volume to be mounted with read-only
                                            permissions. Defaults to false.
                                          type: boolean
                                        registry:
                                          description: registry represents a single
                                            or multiple Quobyte Registry services
                                            specified as a string as host:port pair
                                            (multiple entries are separated with commas)
                                            which acts as the central registry for
                                            volumes
                                          type: string
                                        tenant:
                                          description: tenant owning the given Quobyte
                                            volume in the Backend Used with dynamically
                                            provisioned Quobyte volumes, value is
                                            set by the plugin
                                          type: string
                                        user:
                                          description: user to map volume access to
                                            Defaults to serivceaccount user
                                          type: string
                                        volume:
                                          description: volume is a string that references
                                            an already created Quobyte volume by name.
                                          type: string
                                      required:
                                      - registry
                                      - volume
                                      type: object
                                    rbd:
                                      description: 'rbd represents a Rados Block Device
                                        mount on the host that shares a pod''s lifetime.
                                        Deprecated: RBD is deprecated and the in-tree
                                        rbd type is no longer supported. More info:
                                        https://examples.k8s.io/volumes/rbd/README.md'
                                      properties:
                                        fsType:
                                          description: 'fsType is the filesystem type
                                            of the volume that you want to mount.
                                            Tip: Ensure that the filesystem type is
                                            supported by the host operating system.
                                            Examples: "ext4", "xfs", "ntfs". Implicitly
                                            inferred to be "ext4" if unspecified.
                                            More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd'
                                          type: string
                                        image:
                                          description: 'image is the rados image name.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        keyring:
                                          description: 'keyring is the path to key
                                            ring for RBDUser. Default is /etc/ceph/keyring.
                                            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        monitors:
                                          description: 'monitors is a collection of
                                            Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        pool:
                                          description: 'pool is the rados pool name.
                                            Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                        readOnly:
                                          description: 'readOnly here will force the
                                            ReadOnly setting in VolumeMounts. Defaults
                                            to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: boolean
                                        secretRef:
                                          description: 'secretRef is name of the authentication
                                            secret for RBDUser. If provided overrides
                                            keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                This field is effectively required,
                                                but due to backwards compatibility
                                                is allowed to be empty. Instances
                                                of this type with an empty value here
                                                are almost certainly wrong. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                          type: object
                                        user:
                                          description: 'user is the rados user name.
                                            Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                          type: string
                                      required:
                                      - monitors
                                      - image
                                      type: object
                                    scaleIO:
                                      description: 'scaleIO represents a ScaleIO persistent
                                        volume attached and mounted on Kubernetes
                                        nodes. Deprecated: ScaleIO is deprecated and
                                        the in-tree scaleIO type is no longer supported.'
                                      properties:
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Default is "xfs".
                                          type: string
                                        gateway:
                                          description: gateway is the host address
                                            of the ScaleIO API Gateway.
                                          type: string
                                        protectionDomain:
                                          description: protectionDomain is the name
                                            of the ScaleIO Protection Domain for the
                                            configured storage.
                                          type: string
                                        readOnly:
                                          description: readOnly Defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: secretRef references to the
                                            secret for ScaleIO user and other sensitive
                                            information. If this is not provided,
                                            Login operation will fail.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                This field is effectively required,
                                                but due to backwards compatibility
                                                is allowed to be empty. Instances
                                                of this type with an empty value here
                                                are almost certainly wrong. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                          type: object
                                        sslEnabled:
                                          description: sslEnabled Flag enable/disable
                                            SSL communication with Gateway, default
                                            false
                                          type: boolean
                                        storageMode:
                                          description: storageMode indicates whether
                                            the storage for a volume should be ThickProvisioned
                                            or ThinProvisioned. Default is ThinProvisioned.
                                          type: string
                                        storagePool:
                                          description: storagePool is the ScaleIO
                                            Storage Pool associated with the protection
                                            domain.
                                          type: string
                                        system:
                                          description: system is the name of the storage
                                            system as configured in ScaleIO.
                                          type: string
                                        volumeName:
                                          description: volumeName is the name of a
                                            volume already created in the ScaleIO
                                            system that is associated with this volume
                                            source.
                                          type: string
                                      required:
                                      - gateway
                                      - system
                                      - secretRef
                                      type: object
                                    secret:
                                      description: 'secret represents a secret that
                                        should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is Optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items If unspecified, each
                                            key-value pair in the Data field of the
                                            referenced Secret will be projected into
                                            the volume as a file whose name is the
                                            key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the Secret, the
                                            volume setup will error unless it is marked
                                            optional. Paths must be relative and may
                                            not contain the '..' path or start with
                                            '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: 'secretName is the name of
                                            the secret in the pod''s namespace to
                                            use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                          type: string
                                      type: object
                                    storageos:
                                      description: 'storageOS represents a StorageOS
                                        volume attached and mounted on Kubernetes
                                        nodes. Deprecated: StorageOS is deprecated
                                        and the in-tree storageos type is no longer
                                        supported.'
                                      properties:
                                        fsType:
                                          description: fsType is the filesystem type
                                            to mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        readOnly:
                                          description: readOnly defaults to false
                                            (read/write). ReadOnly here will force
                                            the ReadOnly setting in VolumeMounts.
                                          type: boolean
                                        secretRef:
                                          description: secretRef specifies the secret
                                            to use for obtaining the StorageOS API
                                            credentials.  If not specified, default
                                            values will be attempted.
                                          properties:
                                            name:
                                              description: 'Name of the referent.
                                                This field is effectively required,
                                                but due to backwards compatibility
                                                is allowed to be empty. Instances
                                                of this type with an empty value here
                                                are almost certainly wrong. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                          type: object
                                        volumeName:
                                          description: volumeName is the human-readable
                                            name of the StorageOS volume.  Volume
                                            names are only unique within a namespace.
                                          type: string
                                        volumeNamespace:
                                          description: volumeNamespace specifies the
                                            scope of the volume within StorageOS.  If
                                            no namespace is specified then the Pod's
                                            namespace will be used.  This allows the
                                            Kubernetes name scoping to be mirrored
                                            within StorageOS for tighter integration.
                                            Set VolumeName to any name to override
                                            the default behaviour. Set to "default"
                                            if you are not using namespaces within
                                            StorageOS. Namespaces that do not pre-exist
                                            within StorageOS will be created.
                                          type: string
                                      type: object
                                    vsphereVolume:
                                      description: 'vsphereVolume represents a vSphere
                                        volume attached and mounted on kubelets host
                                        machine. Deprecated: VsphereVolume is deprecated.
                                        All operations for the in-tree vsphereVolume
                                        type are redirected to the csi.vsphere.vmware.com
                                        CSI driver.'
                                      properties:
                                        fsType:
                                          description: fsType is filesystem type to
                                            mount. Must be a filesystem type supported
                                            by the host operating system. Ex. "ext4",
                                            "xfs", "ntfs". Implicitly inferred to
                                            be "ext4" if unspecified.
                                          type: string
                                        storagePolicyID:
                                          description: storagePolicyID is the storage
                                            Policy Based Management (SPBM) profile
                                            ID associated with the StoragePolicyName.
                                          type: string
                                        storagePolicyName:
                                          description: storagePolicyName is the storage
                                            Policy Based Management (SPBM) profile
                                            name.
                                          type: string
                                        volumePath:
                                          description: volumePath is the path that
                                            identifies vSphere volume vmdk
                                          type: string
                                      required:
                                      - volumePath
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              env:
                                description: Env is the list of environment variables
                                  to set in the gardenlet container.
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                This field is effectively required,
                                                but due to backwards compatibility
                                                is allowed to be empty. Instances
                                                of this type with an empty value here
                                                are almost certainly wrong. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                This field is effectively required,
                                                but due to backwards compatibility
                                                is allowed to be empty. Instances
                                                of this type with an empty value here
                                                are almost certainly wrong. More info:
                                                https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                description: Image is the gardenlet container image.
                                properties:
                                  pullPolicy:
                                    description: |-
                                      PullPolicy is the image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if latest tag is specified, or IfNotPresent otherwise.

                                      Possible enum values:
                                       - `"Always"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.
                                       - `"IfNotPresent"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.
                                       - `"Never"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present
                                    type: string
                                  repository:
                                    description: Repository is the image repository.
                                    type: string
                                  tag:
                                    description: Tag is the image tag.
                                    type: string
                                type: object
                              podAnnotations:
                                additionalProperties:
                                  type: string
                                description: PodAnnotations are the annotations on
                                  gardenlet pods.
                                type: object
                              podLabels:
                                additionalProperties:
                                  type: string
                                description: PodLabels are the labels on gardenlet
                                  pods.
                                type: object
                              replicaCount:
                                description: ReplicaCount is the number of gardenlet
                                  replicas. Defaults to 2.
                                format: int32
                                type: integer
                              resources:
                                description: Resources are the compute resources required
                                  by the gardenlet container.
                                properties:
                                  claims:
                                    description: |-
                                      Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.

                                      This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.

                                      This field is immutable. It can only be set for containers.
                                    items:
                                      description: ResourceClaim references one entry
                                        in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: Name must match the name of
                                            one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes
                                            that resource available inside a container.
                                          type: string
                                        request:
                                          description: Request is the name chosen
                                            for a request in the referenced claim.
                                            If empty, everything from the claim is
                                            made available, otherwise only the result
                                            of this request.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. Requests cannot
                                      exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                              revisionHistoryLimit:
                                description: RevisionHistoryLimit is the number of
                                  old gardenlet ReplicaSets to retain to allow rollback.
                                  Defaults to 2.
                                format: int32
                                type: integer
                              serviceAccountName:
                                description: ServiceAccountName is the name of the
                                  ServiceAccount to use to run gardenlet pods.
                                type: string
                            type: object
                          mergeWithParent:
                            description: MergeWithParent specifies whether the GardenletConfiguration
                              of the parent gardenlet should be merged with the specified
                              GardenletConfiguration. Defaults to true. This field
                              is immutable.
                            type: boolean
                        type: object
                      shoot:
                        description: Shoot references a Shoot that should be registered
                          as Seed. This field is immutable.
                        properties:
                          name:
                            description: Name is the name of the Shoot that will be
                              registered as Seed.
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - gardenlet
                    type: object
                type: object
              updateStrategy:
                description: UpdateStrategy specifies the UpdateStrategy that will
                  be employed to update ManagedSeeds / Shoots in the ManagedSeedSet
                  when a revision is made to Template / ShootTemplate.
                properties:
                  rollingUpdate:
                    description: RollingUpdate is used to communicate parameters when
                      Type is RollingUpdateStrategyType.
                    properties:
                      partition:
                        description: Partition indicates the ordinal at which the
                          ManagedSeedSet should be partitioned. Defaults to 0.
                        format: int32
                        type: integer
                    type: object
                  type:
                    description: Type indicates the type of the UpdateStrategy. Defaults
                      to RollingUpdate.
                    type: string
                type: object
            required:
            - selector
            - template
            - shootTemplate
            type: object
          status:
            description: Status is the current status of ManagedSeeds and Shoots in
              this ManagedSeedSet.
            properties:
              collisionCount:
                description: CollisionCount is the count of hash collisions for the
                  ManagedSeedSet. The ManagedSeedSet controller uses this field as
                  a collision avoidance mechanism when it needs to create the name
                  for the newest ControllerRevision.
                format: int32
                type: integer
              conditions:
                description: Conditions represents the latest available observations
                  of a ManagedSeedSet's current state.
                items:
                  description: Condition holds the information about the state of
                    a resource.
                  properties:
                    codes:
                      description: Well-defined error codes in case the condition
                        reports a problem.
                      items:
                        type: string
                      type: array
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: Last time the condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of the condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentReplicas:
                description: CurrentReplicas is the number of ManagedSeeds created
                  by the ManagedSeedSet controller from the ManagedSeedSet version
                  indicated by CurrentRevision.
                format: int32
                type: integer
              currentRevision:
                description: CurrentRevision, if not empty, indicates the version
                  of the ManagedSeedSet used to generate ManagedSeeds with smaller
                  ordinal numbers during updates.
                type: string
              nextReplicaNumber:
                description: NextReplicaNumber is the ordinal number that will be
                  assigned to the next replica of the ManagedSeedSet.
                format: int32
                type: integer
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this ManagedSeedSet. It corresponds to the ManagedSeedSet's
                  generation, which is updated on mutation by the API Server.
                format: int64
                type: integer
              pendingReplica:
                description: PendingReplica, if not empty, indicates the replica that
                  is currently pending creation, update, or deletion. This replica
                  is in a state that requires the controller to wait for it to change
                  before advancing to the next replica.
                properties:
                  name:
                    description: Name is the replica name.
                    type: string
                  reason:
                    description: Reason is the reason for the replica to be pending.
                    type: string
                  retries:
                    description: Retries is the number of times the shoot operation
                      (reconcile or delete) has been retried after having failed.
                      Only applicable if Reason is ShootReconciling or ShootDeleting.
                    format: int32
                    type: integer
                  since:
                    description: Since is the moment in time since the replica is
                      pending with the specified reason.
                    format: date-time
                    type: string
                required:
                - name
                - reason
                - since
                type: object
              readyReplicas:
                description: ReadyReplicas is the number of ManagedSeeds created by
                  the ManagedSeedSet controller that have a Ready Condition.
                format: int32
                type: integer
              replicas:
                description: Replicas is the number of replicas (ManagedSeeds and
                  their corresponding Shoots) created by the ManagedSeedSet controller.
                format: int32
                type: integer
              updateRevision:
                description: UpdateRevision, if not empty, indicates the version of
                  the ManagedSeedSet used to generate ManagedSeeds with larger ordinal
                  numbers during updates
                type: string
              updatedReplicas:
                description: UpdatedReplicas is the number of ManagedSeeds created
                  by the ManagedSeedSet controller from the ManagedSeedSet version
                  indicated by UpdateRevision.
                format: int32
                type: integer
            required:
            - replicas
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1
